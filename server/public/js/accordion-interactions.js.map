{"version":3,"file":"accordion-interactions.js","sources":["../../client/accordion-interactions.ts"],"sourcesContent":["import { MjoAccordionToggleEvent } from \"../../src/types/mjo-accordion\";\r\n\r\nimport { AiFillHeart, AiFillStar, AiOutlineDown, AiOutlineLeft, AiOutlineRight, AiOutlineUp } from \"mjo-icons/ai\";\r\n\r\nlet itemCounter = 4;\r\n\r\nfunction changeAccordionProp(prop: string, value: string | boolean): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    if (typeof value === \"string\") {\r\n        accordion.setAttribute(prop, value);\r\n    } else {\r\n        if (value) {\r\n            accordion.setAttribute(prop, \"\");\r\n        } else {\r\n            accordion.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeAccordionItemProp(prop: string, value: string | boolean): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    const firstItem = accordion.shadowRoot?.querySelector(\"mjo-accordion-item\");\r\n    if (!firstItem) return;\r\n\r\n    let iconValue: string | undefined = undefined;\r\n    if (prop === \"icon\") {\r\n        if (value === \"down\") {\r\n            iconValue = AiOutlineDown;\r\n        } else if (value === \"up\") {\r\n            iconValue = AiOutlineUp;\r\n        } else if (value === \"left\") {\r\n            iconValue = AiOutlineLeft;\r\n        } else if (value === \"star\") {\r\n            iconValue = AiFillStar;\r\n        } else if (value === \"heart\") {\r\n            iconValue = AiFillHeart;\r\n        } else if (value === \"default\") {\r\n            iconValue = AiOutlineRight;\r\n        }\r\n\r\n        value = iconValue as string;\r\n    }\r\n\r\n    if (typeof value === \"string\") {\r\n        firstItem.setAttribute(prop, value);\r\n    } else {\r\n        if (value) {\r\n            firstItem.setAttribute(prop, \"\");\r\n        } else {\r\n            firstItem.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeLastItem(): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    const items = accordion.querySelectorAll(\"mjo-accordion-item\");\r\n    if (items.length > 1) {\r\n        // Keep at least one item\r\n        const lastItem = items[items.length - 1];\r\n        lastItem.removeEventListener(\"toggle\", handleAccordionToggle);\r\n        accordion.removeChild(lastItem);\r\n    }\r\n}\r\n\r\nconst handleAccordionToggle = (ev: Event) => {\r\n    const event = ev as MjoAccordionToggleEvent;\r\n    const { item, expanded } = event.detail;\r\n    const title = item.getAttribute(\"itemTitle\") || \"Unknown\";\r\n\r\n    console.log(`Accordion item \"${title}\" ${expanded ? \"expanded\" : \"collapsed\"}`);\r\n\r\n    // Optional: Show a subtle notification\r\n    // You could integrate with mjo-notification component here\r\n};\r\n\r\n// Initialize interactions when the page loads\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // Add event listeners to all existing accordion items\r\n    document.querySelectorAll(\"mjo-accordion\").forEach((accordion) => {\r\n        accordion.querySelectorAll(\"mjo-accordion-item\").forEach((item) => {\r\n            item.addEventListener(\"toggle\", handleAccordionToggle);\r\n        });\r\n    });\r\n\r\n    // Add some visual feedback for the playground\r\n    const playgroundAccordion = document.getElementById(\"playground-accordion\");\r\n    if (playgroundAccordion) {\r\n        playgroundAccordion.addEventListener(\"toggle\", (ev: Event) => {\r\n            const event = ev as MjoAccordionToggleEvent;\r\n            // Add a subtle visual feedback\r\n            const showcase = document.querySelector(\".playground-showcase\") as HTMLElement;\r\n            if (showcase) {\r\n                showcase.style.transform = \"scale(1.02)\";\r\n                setTimeout(() => {\r\n                    showcase.style.transform = \"\";\r\n                }, 200);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Add demo interaction for rich content examples\r\n    const formButton = document.querySelector(\".rich-content-form button\");\r\n    if (formButton) {\r\n        formButton.addEventListener(\"click\", () => {\r\n            alert(\"Form submitted! (This is just a demo)\");\r\n        });\r\n    }\r\n\r\n    // Add hover effects for accordion showcases\r\n    document.querySelectorAll(\".accordion-showcase mjo-accordion-item\").forEach((item) => {\r\n        const htmlItem = item as HTMLElement;\r\n        item.addEventListener(\"mouseenter\", () => {\r\n            htmlItem.style.transform = \"translateX(4px)\";\r\n            htmlItem.style.transition = \"transform 0.2s ease\";\r\n        });\r\n\r\n        item.addEventListener(\"mouseleave\", () => {\r\n            htmlItem.style.transform = \"\";\r\n        });\r\n    });\r\n});\r\n\r\n// Make functions globally available\r\nwindow.changeAccordionProp = changeAccordionProp;\r\nwindow.changeAccordionItemProp = changeAccordionItemProp;\r\nwindow.removeLastItem = removeLastItem;\r\n\r\n// Type declarations for global functions\r\ndeclare global {\r\n    interface Window {\r\n        changeAccordionProp: (prop: string, value: string | boolean) => void;\r\n        changeAccordionItemProp: (prop: string, value: string | boolean) => void;\r\n        removeLastItem: () => void;\r\n    }\r\n}\r\n"],"names":["changeAccordionProp","prop","value","accordion","changeAccordionItemProp","firstItem","_a","iconValue","AiOutlineDown","AiOutlineUp","AiOutlineLeft","AiFillStar","AiFillHeart","AiOutlineRight","removeLastItem","items","lastItem","handleAccordionToggle","ev","event","item","expanded","title","playgroundAccordion","showcase","formButton","htmlItem"],"mappings":"kEAMA,SAASA,EAAoBC,EAAcC,EAA+B,CAChE,MAAAC,EAAY,SAAS,eAAe,sBAAsB,EAC3DA,IAED,OAAOD,GAAU,SACPC,EAAA,aAAaF,EAAMC,CAAK,EAE9BA,EACUC,EAAA,aAAaF,EAAM,EAAE,EAE/BE,EAAU,gBAAgBF,CAAI,EAG1C,CAEA,SAASG,EAAwBH,EAAcC,EAA+B,OACpE,MAAAC,EAAY,SAAS,eAAe,sBAAsB,EAChE,GAAI,CAACA,EAAW,OAEhB,MAAME,GAAYC,EAAAH,EAAU,aAAV,YAAAG,EAAsB,cAAc,sBACtD,GAAI,CAACD,EAAW,OAEhB,IAAIE,EACAN,IAAS,SACLC,IAAU,OACEK,EAAAC,EACLN,IAAU,KACLK,EAAAE,EACLP,IAAU,OACLK,EAAAG,EACLR,IAAU,OACLK,EAAAI,EACLT,IAAU,QACLK,EAAAK,EACLV,IAAU,YACLK,EAAAM,GAGRX,EAAAK,GAGR,OAAOL,GAAU,SACPG,EAAA,aAAaJ,EAAMC,CAAK,EAE9BA,EACUG,EAAA,aAAaJ,EAAM,EAAE,EAE/BI,EAAU,gBAAgBJ,CAAI,CAG1C,CAEA,SAASa,GAAuB,CACtB,MAAAX,EAAY,SAAS,eAAe,sBAAsB,EAChE,GAAI,CAACA,EAAW,OAEV,MAAAY,EAAQZ,EAAU,iBAAiB,oBAAoB,EACzD,GAAAY,EAAM,OAAS,EAAG,CAElB,MAAMC,EAAWD,EAAMA,EAAM,OAAS,CAAC,EAC9BC,EAAA,oBAAoB,SAAUC,CAAqB,EAC5Dd,EAAU,YAAYa,CAAQ,CAClC,CACJ,CAEA,MAAMC,EAAyBC,GAAc,CACzC,MAAMC,EAAQD,EACR,CAAE,KAAAE,EAAM,SAAAC,GAAaF,EAAM,OAC3BG,EAAQF,EAAK,aAAa,WAAW,GAAK,UAEhD,QAAQ,IAAI,mBAAmBE,CAAK,KAAKD,EAAW,WAAa,WAAW,EAAE,CAIlF,EAGA,SAAS,iBAAiB,mBAAoB,UAAY,CAEtD,SAAS,iBAAiB,eAAe,EAAE,QAASlB,GAAc,CAC9DA,EAAU,iBAAiB,oBAAoB,EAAE,QAASiB,GAAS,CAC1DA,EAAA,iBAAiB,SAAUH,CAAqB,CAAA,CACxD,CAAA,CACJ,EAGK,MAAAM,EAAsB,SAAS,eAAe,sBAAsB,EACtEA,GACoBA,EAAA,iBAAiB,SAAWL,GAAc,CAGpD,MAAAM,EAAW,SAAS,cAAc,sBAAsB,EAC1DA,IACAA,EAAS,MAAM,UAAY,cAC3B,WAAW,IAAM,CACbA,EAAS,MAAM,UAAY,IAC5B,GAAG,EACV,CACH,EAIC,MAAAC,EAAa,SAAS,cAAc,2BAA2B,EACjEA,GACWA,EAAA,iBAAiB,QAAS,IAAM,CACvC,MAAM,uCAAuC,CAAA,CAChD,EAIL,SAAS,iBAAiB,wCAAwC,EAAE,QAASL,GAAS,CAClF,MAAMM,EAAWN,EACZA,EAAA,iBAAiB,aAAc,IAAM,CACtCM,EAAS,MAAM,UAAY,kBAC3BA,EAAS,MAAM,WAAa,qBAAA,CAC/B,EAEIN,EAAA,iBAAiB,aAAc,IAAM,CACtCM,EAAS,MAAM,UAAY,EAAA,CAC9B,CAAA,CACJ,CACL,CAAC,EAGD,OAAO,oBAAsB1B,EAC7B,OAAO,wBAA0BI,EACjC,OAAO,eAAiBU"}