{"version":3,"file":"accordion-interactions.js","sources":["../../client/accordion-interactions.ts"],"sourcesContent":["import { MjoAccordionToggleEvent } from \"../../src/types/mjo-accordion\";\r\n\r\nimport { AiFillHeart, AiFillStar, AiOutlineDown, AiOutlineLeft, AiOutlineRight, AiOutlineUp } from \"mjo-icons/ai\";\r\n\r\nlet itemCounter = 4;\r\n\r\nfunction changeAccordionProp(prop: string, value: string | boolean): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    if (typeof value === \"string\") {\r\n        accordion.setAttribute(prop, value);\r\n    } else {\r\n        if (value) {\r\n            accordion.setAttribute(prop, \"\");\r\n        } else {\r\n            accordion.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeAccordionItemProp(prop: string, value: string | boolean): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    const firstItem = accordion.shadowRoot?.querySelector(\"mjo-accordion-item\");\r\n    if (!firstItem) return;\r\n\r\n    let iconValue: string | undefined = undefined;\r\n    if (prop === \"icon\") {\r\n        if (value === \"down\") {\r\n            iconValue = AiOutlineDown;\r\n        } else if (value === \"up\") {\r\n            iconValue = AiOutlineUp;\r\n        } else if (value === \"left\") {\r\n            iconValue = AiOutlineLeft;\r\n        } else if (value === \"star\") {\r\n            iconValue = AiFillStar;\r\n        } else if (value === \"heart\") {\r\n            iconValue = AiFillHeart;\r\n        } else if (value === \"default\") {\r\n            iconValue = AiOutlineRight;\r\n        }\r\n\r\n        value = iconValue as string;\r\n    }\r\n\r\n    if (typeof value === \"string\") {\r\n        firstItem.setAttribute(prop, value);\r\n    } else {\r\n        if (value) {\r\n            firstItem.setAttribute(prop, \"\");\r\n        } else {\r\n            firstItem.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeLastItem(): void {\r\n    const accordion = document.getElementById(\"playground-accordion\");\r\n    if (!accordion) return;\r\n\r\n    const items = accordion.querySelectorAll(\"mjo-accordion-item\");\r\n    if (items.length > 1) {\r\n        // Keep at least one item\r\n        const lastItem = items[items.length - 1];\r\n        lastItem.removeEventListener(\"toggle\", handleAccordionToggle);\r\n        accordion.removeChild(lastItem);\r\n    }\r\n}\r\n\r\nconst handleAccordionToggle = (ev: Event) => {\r\n    const event = ev as MjoAccordionToggleEvent;\r\n    const { item, expanded } = event.detail;\r\n    const title = item.getAttribute(\"itemTitle\") || \"Unknown\";\r\n\r\n    console.log(`Accordion item \"${title}\" ${expanded ? \"expanded\" : \"collapsed\"}`);\r\n\r\n    // Optional: Show a subtle notification\r\n    // You could integrate with mjo-notification component here\r\n};\r\n\r\n// Initialize interactions when the page loads\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // Add event listeners to all existing accordion items\r\n    document.querySelectorAll(\"mjo-accordion\").forEach((accordion) => {\r\n        accordion.querySelectorAll(\"mjo-accordion-item\").forEach((item) => {\r\n            item.addEventListener(\"toggle\", handleAccordionToggle);\r\n        });\r\n    });\r\n\r\n    // Add some visual feedback for the playground\r\n    const playgroundAccordion = document.getElementById(\"playground-accordion\");\r\n    if (playgroundAccordion) {\r\n        playgroundAccordion.addEventListener(\"toggle\", (ev: Event) => {\r\n            const event = ev as MjoAccordionToggleEvent;\r\n            // Add a subtle visual feedback\r\n            const showcase = document.querySelector(\".playground-showcase\") as HTMLElement;\r\n            if (showcase) {\r\n                showcase.style.transform = \"scale(1.02)\";\r\n                setTimeout(() => {\r\n                    showcase.style.transform = \"\";\r\n                }, 200);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Add demo interaction for rich content examples\r\n    const formButton = document.querySelector(\".rich-content-form button\");\r\n    if (formButton) {\r\n        formButton.addEventListener(\"click\", () => {\r\n            alert(\"Form submitted! (This is just a demo)\");\r\n        });\r\n    }\r\n\r\n    // Add hover effects for accordion showcases\r\n    document.querySelectorAll(\".accordion-showcase mjo-accordion-item\").forEach((item) => {\r\n        const htmlItem = item as HTMLElement;\r\n        item.addEventListener(\"mouseenter\", () => {\r\n            htmlItem.style.transform = \"translateX(4px)\";\r\n            htmlItem.style.transition = \"transform 0.2s ease\";\r\n        });\r\n\r\n        item.addEventListener(\"mouseleave\", () => {\r\n            htmlItem.style.transform = \"\";\r\n        });\r\n    });\r\n});\r\n\r\n// Make functions globally available\r\nwindow.changeAccordionProp = changeAccordionProp;\r\nwindow.changeAccordionItemProp = changeAccordionItemProp;\r\nwindow.removeLastItem = removeLastItem;\r\n\r\n// Type declarations for global functions\r\ndeclare global {\r\n    interface Window {\r\n        changeAccordionProp: (prop: string, value: string | boolean) => void;\r\n        changeAccordionItemProp: (prop: string, value: string | boolean) => void;\r\n        removeLastItem: () => void;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}