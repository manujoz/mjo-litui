{"version":3,"file":"hmr-client.js","sources":["../../client/hmr-client.ts"],"sourcesContent":["/**\r\n * Enhanced HMR client to prevent infinite loops\r\n * Version 3.0 - Advanced state control and smart reconnection\r\n */\r\nclass MjoHMRClient {\r\n    private ws: WebSocket | null = null;\r\n    private reconnectAttempts = 0;\r\n    private maxReconnectAttempts = 3; // Reduced to avoid spam\r\n    private reconnectDelay = 2000; // 2 seconds base\r\n    private isConnected = false;\r\n    private isReloading = false;\r\n    private buildInProgress = false;\r\n    private lastBuildCompleteTime = 0;\r\n    private reloadCooldown = 500; // 500 milliseconds cooldown between reloads\r\n\r\n    // States to prevent loops\r\n    private isShuttingDown = false;\r\n    private hasReloadScheduled = false;\r\n    private notificationTimeout?: number;\r\n\r\n    constructor() {\r\n        // Prevent multiple instances\r\n        if (window.mjoHMRClient) {\r\n            return window.mjoHMRClient;\r\n        }\r\n\r\n        window.mjoHMRClient = this;\r\n        this.init();\r\n    }\r\n\r\n    private init(): void {\r\n        // Mark as initialized to avoid multiple instances\r\n        if (window.mjHMRInitialized) {\r\n            return;\r\n        }\r\n        window.mjHMRInitialized = true;\r\n\r\n        this.setupCleanupListeners();\r\n        this.connect();\r\n    }\r\n\r\n    private setupCleanupListeners(): void {\r\n        // Cleanup when closing/reloading the window\r\n        window.addEventListener(\"beforeunload\", () => {\r\n            this.isShuttingDown = true;\r\n            this.cleanup();\r\n        });\r\n\r\n        window.addEventListener(\"unload\", () => {\r\n            this.isShuttingDown = true;\r\n            this.cleanup();\r\n        });\r\n\r\n        // Cleanup when the page is hidden (tab change, etc.)\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            if (document.hidden && this.isReloading) {\r\n                this.cleanup();\r\n            }\r\n        });\r\n    }\r\n\r\n    private cleanup(): void {\r\n        if (this.ws) {\r\n            try {\r\n                this.ws.close(1000, \"Cleanup\");\r\n            } catch (error) {\r\n                console.warn(\"⚠️ Error closing WebSocket:\", error);\r\n            }\r\n            this.ws = null;\r\n        }\r\n\r\n        this.isConnected = false;\r\n    }\r\n\r\n    private connect(): void {\r\n        // Do not connect if shutting down or reload is already scheduled\r\n        if (this.isShuttingDown || this.isReloading || this.hasReloadScheduled) {\r\n            return;\r\n        }\r\n\r\n        if (this.isConnected) {\r\n            return;\r\n        }\r\n\r\n        const protocol = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\r\n        const wsUrl = `${protocol}//${window.location.host}/hmr`;\r\n\r\n        try {\r\n            this.ws = new WebSocket(wsUrl);\r\n            this.setupEventListeners();\r\n        } catch (error) {\r\n            console.error(\"❌ Error creating WebSocket:\", error);\r\n            this.scheduleReconnect();\r\n        }\r\n    }\r\n\r\n    private setupEventListeners(): void {\r\n        if (!this.ws) return;\r\n\r\n        this.ws.onopen = () => {\r\n            this.isConnected = true;\r\n            this.reconnectAttempts = 0;\r\n            this.showNotification(\"🔥 HMR connected\", \"success\");\r\n        };\r\n\r\n        this.ws.onmessage = (event: MessageEvent) => {\r\n            try {\r\n                const data: HMREventData = JSON.parse(event.data);\r\n                this.handleHMREvent(data);\r\n            } catch (error) {\r\n                console.error(\"❌ Error parsing HMR message:\", error);\r\n            }\r\n        };\r\n\r\n        this.ws.onclose = (event: CloseEvent) => {\r\n            this.isConnected = false;\r\n\r\n            // Only reconnect if not intentionally reloading\r\n            if (!this.isReloading && this.reconnectAttempts < this.maxReconnectAttempts) {\r\n                this.scheduleReconnect();\r\n            }\r\n        };\r\n\r\n        this.ws.onerror = (error: Event) => {\r\n            console.error(\"⚠️ HMR WebSocket error:\", error);\r\n            this.isConnected = false;\r\n        };\r\n    }\r\n\r\n    private handleHMREvent(event: HMREventData): void {\r\n        // Avoid processing events if already reloading or shutting down\r\n        if (this.isReloading || this.isShuttingDown || this.hasReloadScheduled) {\r\n            return;\r\n        }\r\n\r\n        switch (event.type) {\r\n            case \"build-start\":\r\n                this.buildInProgress = true;\r\n                this.showNotification(\"🔨 Building...\", \"info\");\r\n                break;\r\n\r\n            case \"build-complete\":\r\n                this.buildInProgress = false;\r\n                this.lastBuildCompleteTime = Date.now();\r\n                this.showNotification(\"✅ Build completed\", \"success\");\r\n                // Schedule reload with better control\r\n                this.scheduleReload();\r\n                break;\r\n\r\n            case \"build-error\":\r\n                this.buildInProgress = false;\r\n                this.showNotification(`❌ Error: ${event.data?.error || \"Unknown error\"}`, \"error\");\r\n                // DO NOT reload in case of error\r\n                break;\r\n\r\n            case \"file-changed\":\r\n                if (!this.buildInProgress) {\r\n                    const files = event.data?.files || [];\r\n                    this.showNotification(`📝 Files changed: ${files.length}`, \"info\");\r\n                }\r\n                break;\r\n\r\n            case \"reload\":\r\n                this.scheduleReload();\r\n                break;\r\n\r\n            default:\r\n                console.warn(\"🤷‍♂️ Unhandled HMR event:\", event.type);\r\n        }\r\n    }\r\n\r\n    private scheduleReload(): void {\r\n        if (this.hasReloadScheduled || this.isReloading || this.isShuttingDown) {\r\n            return;\r\n        }\r\n\r\n        // Check cooldown\r\n        const timeSinceLastBuild = Date.now() - this.lastBuildCompleteTime;\r\n        if (timeSinceLastBuild > 0 && timeSinceLastBuild < this.reloadCooldown) {\r\n            setTimeout(() => this.scheduleReload(), this.reloadCooldown - timeSinceLastBuild);\r\n            return;\r\n        }\r\n\r\n        this.hasReloadScheduled = true;\r\n        this.isReloading = true;\r\n        this.cleanup();\r\n\r\n        this.showNotification(\"🔄 Reloading page...\", \"info\");\r\n\r\n        // Delay to show notification and clean up connections\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 800);\r\n    }\r\n\r\n    private scheduleReconnect(): void {\r\n        if (this.isReloading || this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n            if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n                console.warn(\"❌ Maximum reconnect attempts reached\");\r\n                this.showNotification(\"❌ HMR permanently disconnected\", \"error\");\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.reconnectAttempts++;\r\n        const delay = this.reconnectDelay * Math.pow(1.5, this.reconnectAttempts - 1);\r\n\r\n        setTimeout(() => {\r\n            if (!this.isReloading && !this.isConnected) {\r\n                this.connect();\r\n            }\r\n        }, delay);\r\n    }\r\n\r\n    private createNotificationContainer(): void {\r\n        // Create notification container if it does not exist\r\n        if (document.getElementById(\"hmr-notifications\")) return;\r\n\r\n        const container = document.createElement(\"div\");\r\n        container.id = \"hmr-notifications\";\r\n        container.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            z-index: 10000;\r\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n            pointer-events: none;\r\n        `;\r\n        document.body.appendChild(container);\r\n    }\r\n\r\n    private showNotification(message: string, type: NotificationType = \"info\"): void {\r\n        this.createNotificationContainer();\r\n        const container = document.getElementById(\"hmr-notifications\");\r\n        if (!container) return;\r\n\r\n        // Clear previous notification\r\n        if (this.notificationTimeout) {\r\n            clearTimeout(this.notificationTimeout);\r\n        }\r\n        container.innerHTML = \"\";\r\n\r\n        const notification = document.createElement(\"div\");\r\n\r\n        const colors: Record<NotificationType, string> = {\r\n            info: \"#3b82f6\",\r\n            success: \"#10b981\",\r\n            error: \"#ef4444\",\r\n            warning: \"#f59e0b\",\r\n        };\r\n\r\n        notification.style.cssText = `\r\n            background: ${colors[type] || colors.info};\r\n            color: white;\r\n            padding: 12px 16px;\r\n            border-radius: 6px;\r\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            margin-bottom: 8px;\r\n            transform: translateX(100%);\r\n            transition: transform 0.3s ease;\r\n            pointer-events: auto;\r\n            cursor: pointer;\r\n        `;\r\n\r\n        notification.textContent = message;\r\n        container.appendChild(notification);\r\n\r\n        // Animate entry\r\n        requestAnimationFrame(() => {\r\n            notification.style.transform = \"translateX(0)\";\r\n        });\r\n\r\n        // Auto-hide after 4 seconds (except permanent errors)\r\n        if (type !== \"error\" || message.includes(\"permanently disconnected\")) {\r\n            this.notificationTimeout = window.setTimeout(() => {\r\n                notification.style.transform = \"translateX(100%)\";\r\n                setTimeout(() => {\r\n                    if (notification.parentNode) {\r\n                        notification.parentNode.removeChild(notification);\r\n                    }\r\n                }, 300);\r\n            }, 4000);\r\n        }\r\n\r\n        // Click to close\r\n        notification.addEventListener(\"click\", () => {\r\n            notification.style.transform = \"translateX(100%)\";\r\n            setTimeout(() => {\r\n                if (notification.parentNode) {\r\n                    notification.parentNode.removeChild(notification);\r\n                }\r\n            }, 300);\r\n        });\r\n    }\r\n}\r\n\r\n// Only initialize once when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        if (!window.mjoHMRClient) {\r\n            new MjoHMRClient();\r\n        }\r\n    });\r\n} else {\r\n    if (!window.mjoHMRClient) {\r\n        new MjoHMRClient();\r\n    }\r\n}\r\n\r\ninterface HMREventData {\r\n    type: \"build-start\" | \"build-complete\" | \"build-error\" | \"file-changed\" | \"reload\";\r\n    data?: {\r\n        error?: string;\r\n        files?: string[];\r\n    };\r\n}\r\n\r\ntype NotificationType = \"info\" | \"success\" | \"error\" | \"warning\";\r\n\r\ninterface Window {\r\n    mjoHMRClient?: MjoHMRClient;\r\n    mjHMRInitialized?: boolean;\r\n}\r\n"],"names":["MjoHMRClient","error","wsUrl","event","data","_a","_b","files","timeSinceLastBuild","delay","container","message","type","notification","colors"],"mappings":"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"}