{"version":3,"file":"button-interactions.js","sources":["../../client/button-interactions.ts"],"sourcesContent":["// Button Interactive Demo TypeScript\r\n// This functionality loads after client hydration\r\n\r\nimport { AiFillAndroid, AiFillApi, AiFillApple, AiFillAudio, AiFillBackward, AiFillWindows } from \"mjo-icons/ai\";\r\nimport { MjoButtonClickEvent, MjoButtonLoadingChangeEvent, MjoButtonToggleEvent } from \"../../src/types/mjo-button\";\r\n\r\n// Playground interactions\r\nfunction changeButtonProp(prop: string, value: string | boolean): void {\r\n    const button = document.getElementById(\"playground-button\");\r\n    if (!button) return;\r\n\r\n    let icon: string | undefined = undefined;\r\n    if (prop === \"startIcon\" || prop === \"endIcon\") {\r\n        if (value === \"icon1\") {\r\n            icon = AiFillApple;\r\n        } else if (value === \"icon2\") {\r\n            icon = AiFillAndroid;\r\n        } else if (value === \"icon3\") {\r\n            icon = AiFillWindows;\r\n        } else if (value === \"icon4\") {\r\n            icon = AiFillApi;\r\n        } else if (value === \"icon5\") {\r\n            icon = AiFillAudio;\r\n        } else if (value === \"icon6\") {\r\n            icon = AiFillBackward;\r\n        }\r\n\r\n        value = icon as string;\r\n    }\r\n\r\n    if (typeof value === \"string\") {\r\n        if (value === \"\") {\r\n            button.removeAttribute(prop);\r\n        } else {\r\n            button.setAttribute(prop, value);\r\n        }\r\n    } else {\r\n        if (value) {\r\n            button.setAttribute(prop, \"\");\r\n        } else {\r\n            button.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\n// Special function to change button text content\r\nfunction changeButtonText(text: string): void {\r\n    const button = document.getElementById(\"playground-button\");\r\n    if (!button) return;\r\n\r\n    button.textContent = text || \"Interactive Button\";\r\n}\r\n\r\n// Initialize interactions when the page loads\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // Add event listeners to all buttons on the page\r\n    document.querySelectorAll(\"mjo-button\").forEach((button) => {\r\n        // Button click event\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            const clickEvent = ev as MjoButtonClickEvent;\r\n            console.log(\"Button clicked:\", {\r\n                element: clickEvent.detail.element,\r\n                toggle: clickEvent.detail.toggle,\r\n                originalEvent: clickEvent.detail.originalEvent,\r\n            });\r\n\r\n            // Show visual feedback for demonstration\r\n            if (button.id !== \"playground-button\") {\r\n                showTemporaryFeedback(button, \"Clicked!\");\r\n            }\r\n        });\r\n\r\n        // Button toggle event\r\n        button.addEventListener(\"mjo-button-toggle\", (ev: Event) => {\r\n            const toggleEvent = ev as MjoButtonToggleEvent;\r\n            console.log(\"Button toggled:\", {\r\n                element: toggleEvent.detail.element,\r\n                pressed: toggleEvent.detail.pressed,\r\n                previousState: toggleEvent.detail.previousState,\r\n            });\r\n\r\n            // Show toggle state feedback\r\n            const state = toggleEvent.detail.pressed ? \"ON\" : \"OFF\";\r\n            showTemporaryFeedback(button, `Toggle: ${state}`);\r\n        });\r\n\r\n        // Button loading change event\r\n        button.addEventListener(\"mjo-button-loading-change\", (ev: Event) => {\r\n            const loadingEvent = ev as MjoButtonLoadingChangeEvent;\r\n            console.log(\"Button loading changed:\", {\r\n                element: loadingEvent.detail.element,\r\n                loading: loadingEvent.detail.loading,\r\n            });\r\n        });\r\n    });\r\n\r\n    // Add special handling for form buttons\r\n    document.querySelectorAll('mjo-button[type=\"submit\"]').forEach((button) => {\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            ev.preventDefault(); // Prevent actual form submission in demo\r\n            showTemporaryFeedback(button, \"Form would submit!\");\r\n        });\r\n    });\r\n\r\n    document.querySelectorAll('mjo-button[type=\"reset\"]').forEach((button) => {\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            ev.preventDefault(); // Prevent actual form reset in demo\r\n            showTemporaryFeedback(button, \"Form would reset!\");\r\n        });\r\n    });\r\n});\r\n\r\n// Helper function to show temporary visual feedback\r\nfunction showTemporaryFeedback(element: Element, message: string): void {\r\n    // Create or update feedback tooltip\r\n    let feedback = document.querySelector(\".button-feedback\") as HTMLElement;\r\n    if (!feedback) {\r\n        feedback = document.createElement(\"div\");\r\n        feedback.className = \"button-feedback\";\r\n        feedback.style.cssText = `\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background: var(--mjo-primary-color);\r\n            color: white;\r\n            padding: 0.5rem 1rem;\r\n            border-radius: var(--mjo-radius);\r\n            font-size: 0.875rem;\r\n            font-weight: 500;\r\n            z-index: 1000;\r\n            opacity: 0;\r\n            transition: opacity 0.3s ease;\r\n            pointer-events: none;\r\n        `;\r\n        document.body.appendChild(feedback);\r\n    }\r\n\r\n    feedback.textContent = message;\r\n    feedback.style.opacity = \"1\";\r\n\r\n    // Hide after 2 seconds\r\n    setTimeout(() => {\r\n        feedback.style.opacity = \"0\";\r\n        setTimeout(() => {\r\n            if (feedback.parentNode) {\r\n                feedback.parentNode.removeChild(feedback);\r\n            }\r\n        }, 300);\r\n    }, 2000);\r\n}\r\n\r\n// Make functions globally available\r\nwindow.changeButtonProp = changeButtonProp;\r\nwindow.changeButtonText = changeButtonText;\r\n\r\n// Declare global types\r\ndeclare global {\r\n    interface Window {\r\n        changeButtonProp: (prop: string, value: string | boolean) => void;\r\n        changeButtonText: (text: string) => void;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}