{"version":3,"file":"button-interactions.js","sources":["../../client/button-interactions.ts"],"sourcesContent":["// Button Interactive Demo TypeScript\r\n// This functionality loads after client hydration\r\n\r\nimport { AiFillAndroid, AiFillApi, AiFillApple, AiFillAudio, AiFillBackward, AiFillWindows } from \"mjo-icons/ai\";\r\nimport { MjoButtonClickEvent, MjoButtonLoadingChangeEvent, MjoButtonToggleEvent } from \"../../src/types/mjo-button\";\r\n\r\n// Playground interactions\r\nfunction changeButtonProp(prop: string, value: string | boolean): void {\r\n    const button = document.getElementById(\"playground-button\");\r\n    if (!button) return;\r\n\r\n    let icon: string | undefined = undefined;\r\n    if (prop === \"startIcon\" || prop === \"endIcon\") {\r\n        if (value === \"icon1\") {\r\n            icon = AiFillApple;\r\n        } else if (value === \"icon2\") {\r\n            icon = AiFillAndroid;\r\n        } else if (value === \"icon3\") {\r\n            icon = AiFillWindows;\r\n        } else if (value === \"icon4\") {\r\n            icon = AiFillApi;\r\n        } else if (value === \"icon5\") {\r\n            icon = AiFillAudio;\r\n        } else if (value === \"icon6\") {\r\n            icon = AiFillBackward;\r\n        }\r\n\r\n        value = icon as string;\r\n    }\r\n\r\n    if (typeof value === \"string\") {\r\n        if (value === \"\") {\r\n            button.removeAttribute(prop);\r\n        } else {\r\n            button.setAttribute(prop, value);\r\n        }\r\n    } else {\r\n        if (value) {\r\n            button.setAttribute(prop, \"\");\r\n        } else {\r\n            button.removeAttribute(prop);\r\n        }\r\n    }\r\n}\r\n\r\n// Special function to change button text content\r\nfunction changeButtonText(text: string): void {\r\n    const button = document.getElementById(\"playground-button\");\r\n    if (!button) return;\r\n\r\n    button.textContent = text || \"Interactive Button\";\r\n}\r\n\r\n// Initialize interactions when the page loads\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    // Add event listeners to all buttons on the page\r\n    document.querySelectorAll(\"mjo-button\").forEach((button) => {\r\n        // Button click event\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            const clickEvent = ev as MjoButtonClickEvent;\r\n            console.log(\"Button clicked:\", {\r\n                element: clickEvent.detail.element,\r\n                toggle: clickEvent.detail.toggle,\r\n                originalEvent: clickEvent.detail.originalEvent,\r\n            });\r\n\r\n            // Show visual feedback for demonstration\r\n            if (button.id !== \"playground-button\") {\r\n                showTemporaryFeedback(button, \"Clicked!\");\r\n            }\r\n        });\r\n\r\n        // Button toggle event\r\n        button.addEventListener(\"mjo-button-toggle\", (ev: Event) => {\r\n            const toggleEvent = ev as MjoButtonToggleEvent;\r\n            console.log(\"Button toggled:\", {\r\n                element: toggleEvent.detail.element,\r\n                pressed: toggleEvent.detail.pressed,\r\n                previousState: toggleEvent.detail.previousState,\r\n            });\r\n\r\n            // Show toggle state feedback\r\n            const state = toggleEvent.detail.pressed ? \"ON\" : \"OFF\";\r\n            showTemporaryFeedback(button, `Toggle: ${state}`);\r\n        });\r\n\r\n        // Button loading change event\r\n        button.addEventListener(\"mjo-button-loading-change\", (ev: Event) => {\r\n            const loadingEvent = ev as MjoButtonLoadingChangeEvent;\r\n            console.log(\"Button loading changed:\", {\r\n                element: loadingEvent.detail.element,\r\n                loading: loadingEvent.detail.loading,\r\n            });\r\n        });\r\n    });\r\n\r\n    // Add special handling for form buttons\r\n    document.querySelectorAll('mjo-button[type=\"submit\"]').forEach((button) => {\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            ev.preventDefault(); // Prevent actual form submission in demo\r\n            showTemporaryFeedback(button, \"Form would submit!\");\r\n        });\r\n    });\r\n\r\n    document.querySelectorAll('mjo-button[type=\"reset\"]').forEach((button) => {\r\n        button.addEventListener(\"mjo-button-click\", (ev: Event) => {\r\n            ev.preventDefault(); // Prevent actual form reset in demo\r\n            showTemporaryFeedback(button, \"Form would reset!\");\r\n        });\r\n    });\r\n});\r\n\r\n// Helper function to show temporary visual feedback\r\nfunction showTemporaryFeedback(element: Element, message: string): void {\r\n    // Create or update feedback tooltip\r\n    let feedback = document.querySelector(\".button-feedback\") as HTMLElement;\r\n    if (!feedback) {\r\n        feedback = document.createElement(\"div\");\r\n        feedback.className = \"button-feedback\";\r\n        feedback.style.cssText = `\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background: var(--mjo-primary-color);\r\n            color: white;\r\n            padding: 0.5rem 1rem;\r\n            border-radius: var(--mjo-radius);\r\n            font-size: 0.875rem;\r\n            font-weight: 500;\r\n            z-index: 1000;\r\n            opacity: 0;\r\n            transition: opacity 0.3s ease;\r\n            pointer-events: none;\r\n        `;\r\n        document.body.appendChild(feedback);\r\n    }\r\n\r\n    feedback.textContent = message;\r\n    feedback.style.opacity = \"1\";\r\n\r\n    // Hide after 2 seconds\r\n    setTimeout(() => {\r\n        feedback.style.opacity = \"0\";\r\n        setTimeout(() => {\r\n            if (feedback.parentNode) {\r\n                feedback.parentNode.removeChild(feedback);\r\n            }\r\n        }, 300);\r\n    }, 2000);\r\n}\r\n\r\n// Make functions globally available\r\nwindow.changeButtonProp = changeButtonProp;\r\nwindow.changeButtonText = changeButtonText;\r\n\r\n// Declare global types\r\ndeclare global {\r\n    interface Window {\r\n        changeButtonProp: (prop: string, value: string | boolean) => void;\r\n        changeButtonText: (text: string) => void;\r\n    }\r\n}\r\n"],"names":["changeButtonProp","prop","value","button","icon","AiFillApple","AiFillAndroid","AiFillWindows","AiFillApi","AiFillAudio","AiFillBackward","changeButtonText","text","ev","clickEvent","showTemporaryFeedback","toggleEvent","state","loadingEvent","element","message","feedback"],"mappings":"kEAOA,SAASA,EAAiBC,EAAcC,EAA+B,CAC7D,MAAAC,EAAS,SAAS,eAAe,mBAAmB,EAC1D,GAAI,CAACA,EAAQ,OAEb,IAAIC,GACAH,IAAS,aAAeA,IAAS,aAC7BC,IAAU,QACHE,EAAAC,EACAH,IAAU,QACVE,EAAAE,EACAJ,IAAU,QACVE,EAAAG,EACAL,IAAU,QACVE,EAAAI,EACAN,IAAU,QACVE,EAAAK,EACAP,IAAU,UACVE,EAAAM,GAGHR,EAAAE,GAGR,OAAOF,GAAU,SACbA,IAAU,GACVC,EAAO,gBAAgBF,CAAI,EAEpBE,EAAA,aAAaF,EAAMC,CAAK,EAG/BA,EACOC,EAAA,aAAaF,EAAM,EAAE,EAE5BE,EAAO,gBAAgBF,CAAI,CAGvC,CAGA,SAASU,EAAiBC,EAAoB,CACpC,MAAAT,EAAS,SAAS,eAAe,mBAAmB,EACrDA,IAELA,EAAO,YAAcS,GAAQ,qBACjC,CAGA,SAAS,iBAAiB,mBAAoB,UAAY,CAEtD,SAAS,iBAAiB,YAAY,EAAE,QAAST,GAAW,CAEjDA,EAAA,iBAAiB,mBAAqBU,GAAc,CACvD,MAAMC,EAAaD,EACnB,QAAQ,IAAI,kBAAmB,CAC3B,QAASC,EAAW,OAAO,QAC3B,OAAQA,EAAW,OAAO,OAC1B,cAAeA,EAAW,OAAO,aAAA,CACpC,EAGGX,EAAO,KAAO,qBACdY,EAAsBZ,EAAQ,UAAU,CAC5C,CACH,EAGMA,EAAA,iBAAiB,oBAAsBU,GAAc,CACxD,MAAMG,EAAcH,EACpB,QAAQ,IAAI,kBAAmB,CAC3B,QAASG,EAAY,OAAO,QAC5B,QAASA,EAAY,OAAO,QAC5B,cAAeA,EAAY,OAAO,aAAA,CACrC,EAGD,MAAMC,EAAQD,EAAY,OAAO,QAAU,KAAO,MAC5BD,EAAAZ,EAAQ,WAAWc,CAAK,EAAE,CAAA,CACnD,EAGMd,EAAA,iBAAiB,4BAA8BU,GAAc,CAChE,MAAMK,EAAeL,EACrB,QAAQ,IAAI,0BAA2B,CACnC,QAASK,EAAa,OAAO,QAC7B,QAASA,EAAa,OAAO,OAAA,CAChC,CAAA,CACJ,CAAA,CACJ,EAGD,SAAS,iBAAiB,2BAA2B,EAAE,QAASf,GAAW,CAChEA,EAAA,iBAAiB,mBAAqBU,GAAc,CACvDA,EAAG,eAAe,EAClBE,EAAsBZ,EAAQ,oBAAoB,CAAA,CACrD,CAAA,CACJ,EAED,SAAS,iBAAiB,0BAA0B,EAAE,QAASA,GAAW,CAC/DA,EAAA,iBAAiB,mBAAqBU,GAAc,CACvDA,EAAG,eAAe,EAClBE,EAAsBZ,EAAQ,mBAAmB,CAAA,CACpD,CAAA,CACJ,CACL,CAAC,EAGD,SAASY,EAAsBI,EAAkBC,EAAuB,CAEhE,IAAAC,EAAW,SAAS,cAAc,kBAAkB,EACnDA,IACUA,EAAA,SAAS,cAAc,KAAK,EACvCA,EAAS,UAAY,kBACrBA,EAAS,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgBhB,SAAA,KAAK,YAAYA,CAAQ,GAGtCA,EAAS,YAAcD,EACvBC,EAAS,MAAM,QAAU,IAGzB,WAAW,IAAM,CACbA,EAAS,MAAM,QAAU,IACzB,WAAW,IAAM,CACTA,EAAS,YACAA,EAAA,WAAW,YAAYA,CAAQ,GAE7C,GAAG,GACP,GAAI,CACX,CAGA,OAAO,iBAAmBrB,EAC1B,OAAO,iBAAmBW"}