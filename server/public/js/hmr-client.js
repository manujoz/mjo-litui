class o{constructor(){if(this.ws=null,this.reconnectAttempts=0,this.maxReconnectAttempts=3,this.reconnectDelay=2e3,this.isConnected=!1,this.isReloading=!1,this.buildInProgress=!1,this.lastBuildCompleteTime=0,this.reloadCooldown=500,this.isShuttingDown=!1,this.hasReloadScheduled=!1,window.mjoHMRClient)return window.mjoHMRClient;window.mjoHMRClient=this,this.init()}init(){window.mjHMRInitialized||(window.mjHMRInitialized=!0,this.setupCleanupListeners(),this.connect())}setupCleanupListeners(){window.addEventListener("beforeunload",()=>{this.isShuttingDown=!0,this.cleanup()}),window.addEventListener("unload",()=>{this.isShuttingDown=!0,this.cleanup()}),document.addEventListener("visibilitychange",()=>{document.hidden&&this.isReloading&&this.cleanup()})}cleanup(){if(this.ws){try{this.ws.close(1e3,"Cleanup")}catch(e){console.warn("⚠️ Error closing WebSocket:",e)}this.ws=null}this.isConnected=!1}connect(){if(this.isShuttingDown||this.isReloading||this.hasReloadScheduled||this.isConnected)return;const i=`${window.location.protocol==="https:"?"wss:":"ws:"}//${window.location.host}/hmr`;try{this.ws=new WebSocket(i),this.setupEventListeners()}catch(n){console.error("❌ Error creating WebSocket:",n),this.scheduleReconnect()}}setupEventListeners(){this.ws&&(this.ws.onopen=()=>{this.isConnected=!0,this.reconnectAttempts=0,this.showNotification("🔥 HMR connected","success")},this.ws.onmessage=e=>{try{const i=JSON.parse(e.data);this.handleHMREvent(i)}catch(i){console.error("❌ Error parsing HMR message:",i)}},this.ws.onclose=e=>{this.isConnected=!1,!this.isReloading&&this.reconnectAttempts<this.maxReconnectAttempts&&this.scheduleReconnect()},this.ws.onerror=e=>{console.error("⚠️ HMR WebSocket error:",e),this.isConnected=!1})}handleHMREvent(e){var i,n;if(!(this.isReloading||this.isShuttingDown||this.hasReloadScheduled))switch(e.type){case"build-start":this.buildInProgress=!0,this.showNotification("🔨 Building...","info");break;case"build-complete":this.buildInProgress=!1,this.lastBuildCompleteTime=Date.now(),this.showNotification("✅ Build completed","success"),this.scheduleReload();break;case"build-error":this.buildInProgress=!1,this.showNotification(`❌ Error: ${((i=e.data)==null?void 0:i.error)||"Unknown error"}`,"error");break;case"file-changed":if(!this.buildInProgress){const t=((n=e.data)==null?void 0:n.files)||[];this.showNotification(`📝 Files changed: ${t.length}`,"info")}break;case"reload":this.scheduleReload();break;default:console.warn("🤷‍♂️ Unhandled HMR event:",e.type)}}scheduleReload(){if(this.hasReloadScheduled||this.isReloading||this.isShuttingDown)return;const e=Date.now()-this.lastBuildCompleteTime;if(e>0&&e<this.reloadCooldown){setTimeout(()=>this.scheduleReload(),this.reloadCooldown-e);return}this.hasReloadScheduled=!0,this.isReloading=!0,this.cleanup(),this.showNotification("🔄 Reloading page...","info"),setTimeout(()=>{window.location.reload()},800)}scheduleReconnect(){if(this.isReloading||this.reconnectAttempts>=this.maxReconnectAttempts){this.reconnectAttempts>=this.maxReconnectAttempts&&(console.warn("❌ Maximum reconnect attempts reached"),this.showNotification("❌ HMR permanently disconnected","error"));return}this.reconnectAttempts++;const e=this.reconnectDelay*Math.pow(1.5,this.reconnectAttempts-1);setTimeout(()=>{!this.isReloading&&!this.isConnected&&this.connect()},e)}createNotificationContainer(){if(document.getElementById("hmr-notifications"))return;const e=document.createElement("div");e.id="hmr-notifications",e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 10000;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            pointer-events: none;
        `,document.body.appendChild(e)}showNotification(e,i="info"){this.createNotificationContainer();const n=document.getElementById("hmr-notifications");if(!n)return;this.notificationTimeout&&clearTimeout(this.notificationTimeout),n.innerHTML="";const t=document.createElement("div"),s={info:"#3b82f6",success:"#10b981",error:"#ef4444",warning:"#f59e0b"};t.style.cssText=`
            background: ${s[i]||s.info};
            color: white;
            padding: 12px 16px;
            border-radius: 6px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 8px;
            transform: translateX(100%);
            transition: transform 0.3s ease;
            pointer-events: auto;
            cursor: pointer;
        `,t.textContent=e,n.appendChild(t),requestAnimationFrame(()=>{t.style.transform="translateX(0)"}),(i!=="error"||e.includes("permanently disconnected"))&&(this.notificationTimeout=window.setTimeout(()=>{t.style.transform="translateX(100%)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)},4e3)),t.addEventListener("click",()=>{t.style.transform="translateX(100%)",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)})}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.mjoHMRClient||new o}):window.mjoHMRClient||new o;
//# sourceMappingURL=hmr-client.js.map
