{"version":3,"file":"client.js","sources":["../../../node_modules/@lit/reactive-element/development/css-tag.js","../../../node_modules/@lit/reactive-element/development/reactive-element.js","../../../node_modules/lit-element/development/lit-element.js","../../../node_modules/@lit/reactive-element/development/decorators/custom-element.js","../../../node_modules/@lit/reactive-element/development/decorators/property.js","../../../node_modules/@lit/reactive-element/development/decorators/state.js","../../../node_modules/@lit/reactive-element/development/decorators/base.js","../../../node_modules/@lit/reactive-element/development/decorators/query.js","../../../node_modules/lit-html/development/directives/if-defined.js","../../../src/mixins/theme-mixin.ts","../../../src/utils/utils.ts","../../../src/mjo-avatar.ts","../../../node_modules/lit-html/development/directives/unsafe-html.js","../../../node_modules/lit-html/development/directives/unsafe-svg.js","../../../src/mjo-icon.ts","../../../src/mjo-typography.ts","../../../src/mjo-chip.ts","../../../src/theme/default-theme.ts","../../../src/mjo-theme.ts","../../client/client.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst NODE_MODE = false;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = global.ShadowRoot &&\n    (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n    'adoptedStyleSheets' in Document.prototype &&\n    'replace' in CSSStyleSheet.prototype;\nconst constructionToken = Symbol();\nconst cssTagCache = new WeakMap();\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n    constructor(cssText, strings, safeToken) {\n        // This property needs to remain unminified.\n        this['_$cssResult$'] = true;\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n        this._strings = strings;\n    }\n    // This is a getter so that it's lazy. In practice, this means stylesheets\n    // are not created until the first element instance is made.\n    get styleSheet() {\n        // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n        // constructable.\n        let styleSheet = this._styleSheet;\n        const strings = this._strings;\n        if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n            const cacheable = strings !== undefined && strings.length === 1;\n            if (cacheable) {\n                styleSheet = cssTagCache.get(strings);\n            }\n            if (styleSheet === undefined) {\n                (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n                if (cacheable) {\n                    cssTagCache.set(strings, styleSheet);\n                }\n            }\n        }\n        return styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\nconst textFromCSSResult = (value) => {\n    // This property needs to remain unminified.\n    if (value['_$cssResult$'] === true) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ` +\n            `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n            `to ensure page security.`);\n    }\n};\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (strings, ...values) => {\n    const cssText = strings.length === 1\n        ? strings[0]\n        : values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, strings, constructionToken);\n};\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (renderRoot, styles) => {\n    if (supportsAdoptingStyleSheets) {\n        renderRoot.adoptedStyleSheets = styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n    }\n    else {\n        for (const s of styles) {\n            const style = document.createElement('style');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const nonce = global['litNonce'];\n            if (nonce !== undefined) {\n                style.setAttribute('nonce', nonce);\n            }\n            style.textContent = s.cssText;\n            renderRoot.appendChild(style);\n        }\n    }\n};\nconst cssResultFromStyleSheet = (sheet) => {\n    let cssText = '';\n    for (const rule of sheet.cssRules) {\n        cssText += rule.cssText;\n    }\n    return unsafeCSS(cssText);\n};\nexport const getCompatibleStyle = supportsAdoptingStyleSheets ||\n    (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s) => s\n    : (s) => s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\nimport { getCompatibleStyle, adoptStyles, } from './css-tag.js';\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\nexport * from './css-tag.js';\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst { is, defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, getPrototypeOf, } = Object;\nconst NODE_MODE = false;\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\nif (NODE_MODE) {\n    global.customElements ??= customElements;\n}\nconst DEV_MODE = true;\nlet issueWarning;\nconst trustedTypes = global\n    .trustedTypes;\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n    ? trustedTypes.emptyScript\n    : '';\nconst polyfillSupport = DEV_MODE\n    ? global.reactiveElementPolyfillSupportDevMode\n    : global.reactiveElementPolyfillSupport;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (global.litIssuedWarnings ??=\n        new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n    issueWarning('dev-mode', `Lit is in dev mode. Not recommended for production!`);\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n        issueWarning('polyfill-support-missing', `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n            `the \\`polyfill-support\\` module has not been loaded.`);\n    }\n}\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n    ? (event) => {\n        const shouldEmit = global\n            .emitLitDebugLogEvents;\n        if (!shouldEmit) {\n            return;\n        }\n        global.dispatchEvent(new CustomEvent('lit-debug', {\n            detail: event,\n        }));\n    }\n    : undefined;\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                value = value ? emptyStringForBooleanAttribute : null;\n                break;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                value = value == null ? value : JSON.stringify(value);\n                break;\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        let fromValue = value;\n        switch (type) {\n            case Boolean:\n                fromValue = value !== null;\n                break;\n            case Number:\n                fromValue = value === null ? null : Number(value);\n                break;\n            case Object:\n            case Array:\n                // Do *not* generate exception when invalid JSON is set as elements\n                // don't normally complain on being mis-configured.\n                // TODO(sorvell): Do generate exception in *dev mode*.\n                try {\n                    // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                    fromValue = JSON.parse(value);\n                }\n                catch (e) {\n                    fromValue = null;\n                }\n                break;\n        }\n        return fromValue;\n    },\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => !is(value, old);\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\nSymbol.metadata ??= Symbol('metadata');\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap();\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport class ReactiveElement\n// In the Node build, this `extends` clause will be substituted with\n// `(globalThis.HTMLElement ?? HTMLElement)`.\n//\n// This way, we will first prefer any global `HTMLElement` polyfill that the\n// user has assigned, and then fall back to the `HTMLElement` shim which has\n// been imported (see note at the top of this file about how this import is\n// generated by Rollup). Note that the `HTMLElement` variable has been\n// shadowed by this import, so it no longer refers to the global.\n extends HTMLElement {\n    /**\n     * Adds an initializer function to the class that is called during instance\n     * construction.\n     *\n     * This is useful for code that runs against a `ReactiveElement`\n     * subclass, such as a decorator, that needs to do work for each\n     * instance, such as setting up a `ReactiveController`.\n     *\n     * ```ts\n     * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n     *   target.addInitializer((instance: ReactiveElement) => {\n     *     // This is run during construction of the element\n     *     new MyController(instance);\n     *   });\n     * }\n     * ```\n     *\n     * Decorating a field will then cause each instance to run an initializer\n     * that adds a controller:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   @myDecorator foo;\n     * }\n     * ```\n     *\n     * Initializers are stored per-constructor. Adding an initializer to a\n     * subclass does not add it to a superclass. Since initializers are run in\n     * constructors, initializers will run in order of the class hierarchy,\n     * starting with superclasses and progressing to the instance's class.\n     *\n     * @nocollapse\n     */\n    static addInitializer(initializer) {\n        this.__prepare();\n        (this._initializers ??= []).push(initializer);\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     * @category attributes\n     */\n    static get observedAttributes() {\n        // Ensure we've created all properties\n        this.finalize();\n        // this.__attributeToPropertyMap is only undefined after finalize() in\n        // ReactiveElement itself. ReactiveElement.observedAttributes is only\n        // accessed with ReactiveElement as the receiver when a subclass or mixin\n        // calls super.observedAttributes\n        return (this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]);\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a {@linkcode PropertyDeclaration} for the property with the\n     * given options. The property setter calls the property's `hasChanged`\n     * property option or uses a strict identity check to determine whether or not\n     * to request an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * ```ts\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // If this is a state property, force the attribute to false.\n        if (options.state) {\n            options.attribute = false;\n        }\n        this.__prepare();\n        this.elementProperties.set(name, options);\n        if (!options.noAccessor) {\n            const key = DEV_MODE\n                ? // Use Symbol.for in dev mode to make it easier to maintain state\n                    // when doing HMR.\n                    Symbol.for(`${String(name)} (@property() cache)`)\n                : Symbol();\n            const descriptor = this.getPropertyDescriptor(name, key, options);\n            if (descriptor !== undefined) {\n                defineProperty(this.prototype, name, descriptor);\n            }\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   static getPropertyDescriptor(name, key, options) {\n     *     const defaultDescriptor =\n     *         super.getPropertyDescriptor(name, key, options);\n     *     const setter = defaultDescriptor.set;\n     *     return {\n     *       get: defaultDescriptor.get,\n     *       set(value) {\n     *         setter.call(this, value);\n     *         // custom action.\n     *       },\n     *       configurable: true,\n     *       enumerable: true\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @nocollapse\n     * @category properties\n     */\n    static getPropertyDescriptor(name, key, options) {\n        const { get, set } = getOwnPropertyDescriptor(this.prototype, name) ?? {\n            get() {\n                return this[key];\n            },\n            set(v) {\n                this[key] = v;\n            },\n        };\n        if (DEV_MODE && get == null) {\n            if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n                throw new Error(`Field ${JSON.stringify(String(name))} on ` +\n                    `${this.name} was declared as a reactive property ` +\n                    `but it's actually declared as a value on the prototype. ` +\n                    `Usually this is due to using @property or @state on a method.`);\n            }\n            issueWarning('reactive-property-without-getter', `Field ${JSON.stringify(String(name))} on ` +\n                `${this.name} was declared as a reactive property ` +\n                `but it does not have a getter. This will be an error in a ` +\n                `future version of Lit.`);\n        }\n        return {\n            get() {\n                return get?.call(this);\n            },\n            set(value) {\n                const oldValue = get?.call(this);\n                set.call(this, value);\n                this.requestUpdate(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true,\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a `PropertyDeclaration` via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override\n     * {@linkcode createProperty}.\n     *\n     * @nocollapse\n     * @final\n     * @category properties\n     */\n    static getPropertyOptions(name) {\n        return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n    }\n    /**\n     * Initializes static own properties of the class used in bookkeeping\n     * for element properties, initializers, etc.\n     *\n     * Can be called multiple times by code that needs to ensure these\n     * properties exist before using them.\n     *\n     * This method ensures the superclass is finalized so that inherited\n     * property metadata can be copied down.\n     * @nocollapse\n     */\n    static __prepare() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))) {\n            // Already prepared\n            return;\n        }\n        // Finalize any superclasses\n        const superCtor = getPrototypeOf(this);\n        superCtor.finalize();\n        // Create own set of initializers for this class if any exist on the\n        // superclass and copy them down. Note, for a small perf boost, avoid\n        // creating initializers unless needed.\n        if (superCtor._initializers !== undefined) {\n            this._initializers = [...superCtor._initializers];\n        }\n        // Initialize elementProperties from the superclass\n        this.elementProperties = new Map(superCtor.elementProperties);\n    }\n    /**\n     * Finishes setting up the class so that it's ready to be registered\n     * as a custom element and instantiated.\n     *\n     * This method is called by the ReactiveElement.observedAttributes getter.\n     * If you override the observedAttributes getter, you must either call\n     * super.observedAttributes to trigger finalization, or call finalize()\n     * yourself.\n     *\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n            return;\n        }\n        this.finalized = true;\n        this.__prepare();\n        // Create properties from the static properties block:\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            const propKeys = [\n                ...getOwnPropertyNames(props),\n                ...getOwnPropertySymbols(props),\n            ];\n            for (const p of propKeys) {\n                this.createProperty(p, props[p]);\n            }\n        }\n        // Create properties from standard decorator metadata:\n        const metadata = this[Symbol.metadata];\n        if (metadata !== null) {\n            const properties = litPropertyMetadata.get(metadata);\n            if (properties !== undefined) {\n                for (const [p, options] of properties) {\n                    this.elementProperties.set(p, options);\n                }\n            }\n        }\n        // Create the attribute-to-property map\n        this.__attributeToPropertyMap = new Map();\n        for (const [p, options] of this.elementProperties) {\n            const attr = this.__attributeNameForProperty(p, options);\n            if (attr !== undefined) {\n                this.__attributeToPropertyMap.set(attr, p);\n            }\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n        if (DEV_MODE) {\n            if (this.hasOwnProperty('createProperty')) {\n                issueWarning('no-override-create-property', 'Overriding ReactiveElement.createProperty() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n            if (this.hasOwnProperty('getPropertyDescriptor')) {\n                issueWarning('no-override-get-property-descriptor', 'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n                    'The override will not be called with standard decorators');\n            }\n        }\n    }\n    /**\n     * Takes the styles the user supplied via the `static styles` property and\n     * returns the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * Styles are deduplicated preserving the _last_ instance in the list. This\n     * is a performance optimization to avoid duplicated styles that can occur\n     * especially when composing via subclassing. The last item is kept to try\n     * to preserve the cascade order with the assumption that it's most important\n     * that last added styles override previous styles.\n     *\n     * @nocollapse\n     * @category styles\n     */\n    static finalizeStyles(styles) {\n        const elementStyles = [];\n        if (Array.isArray(styles)) {\n            // Dedupe the flattened array in reverse order to preserve the last items.\n            // Casting to Array<unknown> works around TS error that\n            // appears to come from trying to flatten a type CSSResultArray.\n            const set = new Set(styles.flat(Infinity).reverse());\n            // Then preserve original order by adding the set items in reverse order.\n            for (const s of set) {\n                elementStyles.unshift(getCompatibleStyle(s));\n            }\n        }\n        else if (styles !== undefined) {\n            elementStyles.push(getCompatibleStyle(styles));\n        }\n        return elementStyles;\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static __attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false\n            ? undefined\n            : typeof attribute === 'string'\n                ? attribute\n                : typeof name === 'string'\n                    ? name.toLowerCase()\n                    : undefined;\n    }\n    constructor() {\n        super();\n        this.__instanceProperties = undefined;\n        /**\n         * True if there is a pending update as a result of calling `requestUpdate()`.\n         * Should only be read.\n         * @category updates\n         */\n        this.isUpdatePending = false;\n        /**\n         * Is set to `true` after the first update. The element code cannot assume\n         * that `renderRoot` exists before the element `hasUpdated`.\n         * @category updates\n         */\n        this.hasUpdated = false;\n        /**\n         * Name of currently reflecting property\n         */\n        this.__reflectingProperty = null;\n        this.__initialize();\n    }\n    /**\n     * Internal only override point for customizing work done when elements\n     * are constructed.\n     */\n    __initialize() {\n        this.__updatePromise = new Promise((res) => (this.enableUpdating = res));\n        this._$changedProperties = new Map();\n        // This enqueues a microtask that ust run before the first update, so it\n        // must be called before requestUpdate()\n        this.__saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdate();\n        this.constructor._initializers?.forEach((i) => i(this));\n    }\n    /**\n     * Registers a `ReactiveController` to participate in the element's reactive\n     * update cycle. The element automatically calls into any registered\n     * controllers during its lifecycle callbacks.\n     *\n     * If the element is connected when `addController()` is called, the\n     * controller's `hostConnected()` callback will be immediately called.\n     * @category controllers\n     */\n    addController(controller) {\n        (this.__controllers ??= new Set()).add(controller);\n        // If a controller is added after the element has been connected,\n        // call hostConnected. Note, re-using existence of `renderRoot` here\n        // (which is set in connectedCallback) to avoid the need to track a\n        // first connected state.\n        if (this.renderRoot !== undefined && this.isConnected) {\n            controller.hostConnected?.();\n        }\n    }\n    /**\n     * Removes a `ReactiveController` from the element.\n     * @category controllers\n     */\n    removeController(controller) {\n        this.__controllers?.delete(controller);\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    __saveInstanceProperties() {\n        const instanceProperties = new Map();\n        const elementProperties = this.constructor\n            .elementProperties;\n        for (const p of elementProperties.keys()) {\n            if (this.hasOwnProperty(p)) {\n                instanceProperties.set(p, this[p]);\n                delete this[p];\n            }\n        }\n        if (instanceProperties.size > 0) {\n            this.__instanceProperties = instanceProperties;\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     *\n     * @return Returns a node into which to render.\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = this.shadowRoot ??\n            this.attachShadow(this.constructor.shadowRootOptions);\n        adoptStyles(renderRoot, this.constructor.elementStyles);\n        return renderRoot;\n    }\n    /**\n     * On first connection, creates the element's renderRoot, sets up\n     * element styling, and enables updating.\n     * @category lifecycle\n     */\n    connectedCallback() {\n        // Create renderRoot before controllers `hostConnected`\n        this.renderRoot ??=\n            this.createRenderRoot();\n        this.enableUpdating(true);\n        this.__controllers?.forEach((c) => c.hostConnected?.());\n    }\n    /**\n     * Note, this method should be considered final and not overridden. It is\n     * overridden on the element instance with a function that triggers the first\n     * update.\n     * @category updates\n     */\n    enableUpdating(_requestedUpdate) { }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        this.__controllers?.forEach((c) => c.hostDisconnected?.());\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     *\n     * Specifically, when an attribute is set, the corresponding property is set.\n     * You should rarely need to implement this callback. If this method is\n     * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n     * called.\n     *\n     * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n     * on MDN for more information about the `attributeChangedCallback`.\n     * @category attributes\n     */\n    attributeChangedCallback(name, _old, value) {\n        this._$attributeToProperty(name, value);\n    }\n    __propertyToAttribute(name, value) {\n        const elemProperties = this.constructor.elementProperties;\n        const options = elemProperties.get(name);\n        const attr = this.constructor.__attributeNameForProperty(name, options);\n        if (attr !== undefined && options.reflect === true) {\n            const converter = options.converter?.toAttribute !==\n                undefined\n                ? options.converter\n                : defaultConverter;\n            const attrValue = converter.toAttribute(value, options.type);\n            if (DEV_MODE &&\n                this.constructor.enabledWarnings.includes('migration') &&\n                attrValue === undefined) {\n                issueWarning('undefined-attribute-value', `The attribute value for the ${name} property is ` +\n                    `undefined on element ${this.localName}. The attribute will be ` +\n                    `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n                    `the attribute would not have changed.`);\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this.__reflectingProperty = name;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /** @internal */\n    _$attributeToProperty(name, value) {\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        const propName = ctor.__attributeToPropertyMap.get(name);\n        // Use tracking info to avoid reflecting a property value to an attribute\n        // if it was just set because the attribute changed.\n        if (propName !== undefined && this.__reflectingProperty !== propName) {\n            const options = ctor.getPropertyOptions(propName);\n            const converter = typeof options.converter === 'function'\n                ? { fromAttribute: options.converter }\n                : options.converter?.fromAttribute !== undefined\n                    ? options.converter\n                    : defaultConverter;\n            // mark state reflecting\n            this.__reflectingProperty = propName;\n            this[propName] = converter.fromAttribute(value, options.type\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            );\n            // mark state not reflecting\n            this.__reflectingProperty = null;\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should be called\n     * when an element should update based on some state not triggered by setting\n     * a reactive property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored.\n     *\n     * @param name name of requesting property\n     * @param oldValue old value of requesting property\n     * @param options property options to use instead of the previously\n     *     configured options\n     * @category updates\n     */\n    requestUpdate(name, oldValue, options) {\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            if (DEV_MODE && name instanceof Event) {\n                issueWarning(``, `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`);\n            }\n            options ??= this.constructor.getPropertyOptions(name);\n            const hasChanged = options.hasChanged ?? notEqual;\n            const newValue = this[name];\n            if (hasChanged(newValue, oldValue)) {\n                this._$changeProperty(name, oldValue, options);\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                return;\n            }\n        }\n        if (this.isUpdatePending === false) {\n            this.__updatePromise = this.__enqueueUpdate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _$changeProperty(name, oldValue, options) {\n        // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n        // vs just Map.set()\n        if (!this._$changedProperties.has(name)) {\n            this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `__reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n            (this.__reflectingProperties ??= new Set()).add(name);\n        }\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async __enqueueUpdate() {\n        this.isUpdatePending = true;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this.__updatePromise;\n        }\n        catch (e) {\n            // Refire any previous errors async so they do not disrupt the update\n            // cycle. Errors are refired so developers have a chance to observe\n            // them, and this can be done by implementing\n            // `window.onunhandledrejection`.\n            Promise.reject(e);\n        }\n        const result = this.scheduleUpdate();\n        // If `scheduleUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this.isUpdatePending;\n    }\n    /**\n     * Schedules an element update. You can override this method to change the\n     * timing of updates by returning a Promise. The update will await the\n     * returned Promise, and you should resolve the Promise to allow the update\n     * to proceed. If this method is overridden, `super.scheduleUpdate()`\n     * must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```ts\n     * override protected async scheduleUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.scheduleUpdate();\n     * }\n     * ```\n     * @category updates\n     */\n    scheduleUpdate() {\n        const result = this.performUpdate();\n        if (DEV_MODE &&\n            this.constructor.enabledWarnings.includes('async-perform-update') &&\n            typeof result?.then ===\n                'function') {\n            issueWarning('async-perform-update', `Element ${this.localName} returned a Promise from performUpdate(). ` +\n                `This behavior is deprecated and will be removed in a future ` +\n                `version of ReactiveElement.`);\n        }\n        return result;\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * Call `performUpdate()` to immediately process a pending update. This should\n     * generally not be needed, but it can be done in rare cases when you need to\n     * update synchronously.\n     *\n     * @category updates\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this.isUpdatePending) {\n            return;\n        }\n        debugLogEvent?.({ kind: 'update' });\n        if (!this.hasUpdated) {\n            // Create renderRoot before first update. This occurs in `connectedCallback`\n            // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n            this.renderRoot ??=\n                this.createRenderRoot();\n            if (DEV_MODE) {\n                // Produce warning if any reactive properties on the prototype are\n                // shadowed by class fields. Instance fields set before upgrade are\n                // deleted by this point, so any own property is caused by class field\n                // initialization in the constructor.\n                const ctor = this.constructor;\n                const shadowedProperties = [...ctor.elementProperties.keys()].filter((p) => this.hasOwnProperty(p) && p in getPrototypeOf(this));\n                if (shadowedProperties.length) {\n                    throw new Error(`The following properties on element ${this.localName} will not ` +\n                        `trigger updates as expected because they are set using class ` +\n                        `fields: ${shadowedProperties.join(', ')}. ` +\n                        `Native class fields and some compiled output will overwrite ` +\n                        `accessors used for detecting changes. See ` +\n                        `https://lit.dev/msg/class-field-shadowing ` +\n                        `for more information.`);\n                }\n            }\n            // Mixin instance properties once, if they exist.\n            if (this.__instanceProperties) {\n                // TODO (justinfagnani): should we use the stored value? Could a new value\n                // have been set since we stored the own property value?\n                for (const [p, value] of this.__instanceProperties) {\n                    this[p] = value;\n                }\n                this.__instanceProperties = undefined;\n            }\n            // Trigger initial value reflection and populate the initial\n            // changedProperties map, but only for the case of experimental\n            // decorators on accessors, which will not have already populated the\n            // changedProperties map. We can't know if these accessors had\n            // initializers, so we just set them anyway - a difference from\n            // experimental decorators on fields and standard decorators on\n            // auto-accessors.\n            // For context why experimentalDecorators with auto accessors are handled\n            // specifically also see:\n            // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n            const elementProperties = this.constructor\n                .elementProperties;\n            if (elementProperties.size > 0) {\n                for (const [p, options] of elementProperties) {\n                    if (options.wrapped === true &&\n                        !this._$changedProperties.has(p) &&\n                        this[p] !== undefined) {\n                        this._$changeProperty(p, this[p], options);\n                    }\n                }\n            }\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._$changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.willUpdate(changedProperties);\n                this.__controllers?.forEach((c) => c.hostUpdate?.());\n                this.update(changedProperties);\n            }\n            else {\n                this.__markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this.__markUpdated();\n            throw e;\n        }\n        // The update is no longer considered pending and further updates are now allowed.\n        if (shouldUpdate) {\n            this._$didUpdate(changedProperties);\n        }\n    }\n    /**\n     * Invoked before `update()` to compute values needed during the update.\n     *\n     * Implement `willUpdate` to compute property values that depend on other\n     * properties and are used in the rest of the update process.\n     *\n     * ```ts\n     * willUpdate(changedProperties) {\n     *   // only need to check changed properties for an expensive computation.\n     *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n     *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n     *   }\n     * }\n     *\n     * render() {\n     *   return html`SHA: ${this.sha}`;\n     * }\n     * ```\n     *\n     * @category updates\n     */\n    willUpdate(_changedProperties) { }\n    // Note, this is an override point for polyfill-support.\n    // @internal\n    _$didUpdate(changedProperties) {\n        this.__controllers?.forEach((c) => c.hostUpdated?.());\n        if (!this.hasUpdated) {\n            this.hasUpdated = true;\n            this.firstUpdated(changedProperties);\n        }\n        this.updated(changedProperties);\n        if (DEV_MODE &&\n            this.isUpdatePending &&\n            this.constructor.enabledWarnings.includes('change-in-update')) {\n            issueWarning('change-in-update', `Element ${this.localName} scheduled an update ` +\n                `(generally because a property was set) ` +\n                `after an update completed, causing a new update to be scheduled. ` +\n                `This is inefficient and should be avoided unless the next update ` +\n                `can only be scheduled as a side effect of the previous update.`);\n        }\n    }\n    __markUpdated() {\n        this._$changedProperties = new Map();\n        this.isUpdatePending = false;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super.getUpdateComplete()`, then any subsequent state.\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     * ```ts\n     * class MyElement extends LitElement {\n     *   override async getUpdateComplete() {\n     *     const result = await super.getUpdateComplete();\n     *     await this._myChild.updateComplete;\n     *     return result;\n     *   }\n     * }\n     * ```\n     *\n     * @return A promise of a boolean that resolves to true if the update completed\n     *     without triggering another update.\n     * @category updates\n     */\n    getUpdateComplete() {\n        return this.__updatePromise;\n    }\n    /**\n     * Controls whether or not `update()` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(_changedProperties) {\n        // The forEach() expression will only run when when __reflectingProperties is\n        // defined, and it returns undefined, setting __reflectingProperties to\n        // undefined\n        this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) => this.__propertyToAttribute(p, this[p]));\n        this.__markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    updated(_changedProperties) { }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * ```ts\n     * firstUpdated() {\n     *   this.renderRoot.getElementById('my-text-area').focus();\n     * }\n     * ```\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    firstUpdated(_changedProperties) { }\n}\n/**\n * Memoized list of all element styles.\n * Created lazily on user subclasses when finalizing the class.\n * @nocollapse\n * @category styles\n */\nReactiveElement.elementStyles = [];\n/**\n * Options used when calling `attachShadow`. Set this property to customize\n * the options for the shadowRoot; for example, to create a closed\n * shadowRoot: `{mode: 'closed'}`.\n *\n * Note, these options are used in `createRenderRoot`. If this method\n * is customized, options should be respected if possible.\n * @nocollapse\n * @category rendering\n */\nReactiveElement.shadowRootOptions = { mode: 'open' };\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\nReactiveElement[JSCompiler_renameProperty('elementProperties', ReactiveElement)] = new Map();\nReactiveElement[JSCompiler_renameProperty('finalized', ReactiveElement)] = new Map();\n// Apply polyfills if available\npolyfillSupport?.({ ReactiveElement });\n// Dev mode warnings...\nif (DEV_MODE) {\n    // Default warning set.\n    ReactiveElement.enabledWarnings = [\n        'change-in-update',\n        'async-perform-update',\n    ];\n    const ensureOwnWarnings = function (ctor) {\n        if (!ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))) {\n            ctor.enabledWarnings = ctor.enabledWarnings.slice();\n        }\n    };\n    ReactiveElement.enableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        if (!this.enabledWarnings.includes(warning)) {\n            this.enabledWarnings.push(warning);\n        }\n    };\n    ReactiveElement.disableWarning = function (warning) {\n        ensureOwnWarnings(this);\n        const i = this.enabledWarnings.indexOf(warning);\n        if (i >= 0) {\n            this.enabledWarnings.splice(i, 1);\n        }\n    };\n}\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.4');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=reactive-element.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n * LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n * Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { ReactiveElement } from '@lit/reactive-element';\nimport { render, noChange } from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = (prop, _obj) => prop;\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @category rendering\n         */\n        this.renderOptions = { host: this };\n        this.__childPart = undefined;\n    }\n    /**\n     * @category rendering\n     */\n    createRenderRoot() {\n        const renderRoot = super.createRenderRoot();\n        // When adoptedStyleSheets are shimmed, they are inserted into the\n        // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n        // any styles in Lit content render before adoptedStyleSheets. This is\n        // important so that adoptedStyleSheets have precedence over styles in\n        // the shadowRoot.\n        this.renderOptions.renderBefore ??= renderRoot.firstChild;\n        return renderRoot;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param changedProperties Map of changed properties with old values\n     * @category updates\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const value = this.render();\n        if (!this.hasUpdated) {\n            this.renderOptions.isConnected = this.isConnected;\n        }\n        super.update(changedProperties);\n        this.__childPart = render(value, this.renderRoot, this.renderOptions);\n    }\n    /**\n     * Invoked when the component is added to the document's DOM.\n     *\n     * In `connectedCallback()` you should setup tasks that should only occur when\n     * the element is connected to the document. The most common of these is\n     * adding event listeners to nodes external to the element, like a keydown\n     * event handler added to the window.\n     *\n     * ```ts\n     * connectedCallback() {\n     *   super.connectedCallback();\n     *   addEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * Typically, anything done in `connectedCallback()` should be undone when the\n     * element is disconnected, in `disconnectedCallback()`.\n     *\n     * @category lifecycle\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.__childPart?.setConnected(true);\n    }\n    /**\n     * Invoked when the component is removed from the document's DOM.\n     *\n     * This callback is the main signal to the element that it may no longer be\n     * used. `disconnectedCallback()` should ensure that nothing is holding a\n     * reference to the element (such as event listeners added to nodes external\n     * to the element), so that it is free to be garbage collected.\n     *\n     * ```ts\n     * disconnectedCallback() {\n     *   super.disconnectedCallback();\n     *   window.removeEventListener('keydown', this._handleKeydown);\n     * }\n     * ```\n     *\n     * An element may be re-connected after being disconnected.\n     *\n     * @category lifecycle\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.__childPart?.setConnected(false);\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `ChildPart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     * @category rendering\n     */\n    render() {\n        return noChange;\n    }\n}\n// This property needs to remain unminified.\nLitElement['_$litElement$'] = true;\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\nLitElement[JSCompiler_renameProperty('finalized', LitElement)] = true;\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({ LitElement });\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n    ? globalThis.litElementPolyfillSupportDevMode\n    : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({ LitElement });\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n    _$attributeToProperty: (el, name, value) => {\n        // eslint-disable-next-line\n        el._$attributeToProperty(name, value);\n    },\n    // eslint-disable-next-line\n    _$changedProperties: (el) => el._$changedProperties,\n};\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.1.0');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n    issueWarning('multiple-versions', `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`);\n}\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrTarget, context) => {\n    if (context !== undefined) {\n        context.addInitializer(() => {\n            customElements.define(tagName, classOrTarget);\n        });\n    }\n    else {\n        customElements.define(tagName, classOrTarget);\n    }\n};\n//# sourceMappingURL=custom-element.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { defaultConverter, notEqual, } from '../reactive-element.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += ` See https://lit.dev/msg/${code} for more information.`;\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\nconst legacyProperty = (options, proto, name) => {\n    const hasOwnProperty = proto.hasOwnProperty(name);\n    proto.constructor.createProperty(name, hasOwnProperty ? { ...options, wrapped: true } : options);\n    // For accessors (which have a descriptor on the prototype) we need to\n    // return a descriptor, otherwise TypeScript overwrites the descriptor we\n    // define in createProperty() with the original descriptor. We don't do this\n    // for fields, which don't have a descriptor, because this could overwrite\n    // descriptor defined by other decorators.\n    return hasOwnProperty\n        ? Object.getOwnPropertyDescriptor(proto, name)\n        : undefined;\n};\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual,\n};\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = (options = defaultPropertyDeclaration, target, context) => {\n    const { kind, metadata } = context;\n    if (DEV_MODE && metadata == null) {\n        issueWarning('missing-class-metadata', `The class ${target} is missing decorator metadata. This ` +\n            `could mean that you're using a compiler that supports decorators ` +\n            `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n            `Please update your compiler.`);\n    }\n    // Store the property options\n    let properties = globalThis.litPropertyMetadata.get(metadata);\n    if (properties === undefined) {\n        globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n    }\n    properties.set(context.name, options);\n    if (kind === 'accessor') {\n        // Standard decorators cannot dynamically modify the class, so we can't\n        // replace a field with accessors. The user must use the new `accessor`\n        // keyword instead.\n        const { name } = context;\n        return {\n            set(v) {\n                const oldValue = target.get.call(this);\n                target.set.call(this, v);\n                this.requestUpdate(name, oldValue, options);\n            },\n            init(v) {\n                if (v !== undefined) {\n                    this._$changeProperty(name, undefined, options);\n                }\n                return v;\n            },\n        };\n    }\n    else if (kind === 'setter') {\n        const { name } = context;\n        return function (value) {\n            const oldValue = this[name];\n            target.call(this, value);\n            this.requestUpdate(name, oldValue, options);\n        };\n    }\n    throw new Error(`Unsupported decorator location: ${kind}`);\n};\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    return (protoOrTarget, nameOrContext\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) => {\n        return (typeof nameOrContext === 'object'\n            ? standardProperty(options, protoOrTarget, nameOrContext)\n            : legacyProperty(options, protoOrTarget, nameOrContext));\n    };\n}\n//# sourceMappingURL=property.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport { property } from './property.js';\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options) {\n    return property({\n        ...options,\n        // Add both `state` and `attribute` because we found a third party\n        // controller that is keying off of PropertyOptions.state to determine\n        // whether a field is a private internal property or not.\n        state: true,\n        attribute: false,\n    });\n}\n//# sourceMappingURL=state.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (obj, name, descriptor) => {\n    // For backwards compatibility, we keep them configurable and enumerable.\n    descriptor.configurable = true;\n    descriptor.enumerable = true;\n    if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    Reflect.decorate &&\n        typeof name !== 'object') {\n        // If we're called as a legacy decorator, and Reflect.decorate is present\n        // then we have no guarantees that the returned descriptor will be\n        // defined on the class, so we must apply it directly ourselves.\n        Object.defineProperty(obj, name, descriptor);\n    }\n    return descriptor;\n};\n//# sourceMappingURL=base.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { desc } from './base.js';\nconst DEV_MODE = true;\nlet issueWarning;\nif (DEV_MODE) {\n    // Ensure warnings are issued only 1x, even if multiple versions of Lit\n    // are loaded.\n    const issuedWarnings = (globalThis.litIssuedWarnings ??= new Set());\n    // Issue a warning, if we haven't already.\n    issueWarning = (code, warning) => {\n        warning += code\n            ? ` See https://lit.dev/msg/${code} for more information.`\n            : '';\n        if (!issuedWarnings.has(warning)) {\n            console.warn(warning);\n            issuedWarnings.add(warning);\n        }\n    };\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return ((protoOrTarget, nameOrContext, descriptor) => {\n        const doQuery = (el) => {\n            const result = (el.renderRoot?.querySelector(selector) ?? null);\n            if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n                const name = typeof nameOrContext === 'object'\n                    ? nameOrContext.name\n                    : nameOrContext;\n                issueWarning('', `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n                    `flag set for selector '${selector}' has been accessed before ` +\n                    `the first update and returned null. This is expected if the ` +\n                    `renderRoot tree has not been provided beforehand (e.g. via ` +\n                    `Declarative Shadow DOM). Therefore the value hasn't been cached.`);\n            }\n            // TODO: if we want to allow users to assert that the query will never\n            // return null, we need a new option and to throw here if the result\n            // is null.\n            return result;\n        };\n        if (cache) {\n            // Accessors to wrap from either:\n            //   1. The decorator target, in the case of standard decorators\n            //   2. The property descriptor, in the case of experimental decorators\n            //      on auto-accessors.\n            //   3. Functions that access our own cache-key property on the instance,\n            //      in the case of experimental decorators on fields.\n            const { get, set } = typeof nameOrContext === 'object'\n                ? protoOrTarget\n                : descriptor ??\n                    (() => {\n                        const key = DEV_MODE\n                            ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                            : Symbol();\n                        return {\n                            get() {\n                                return this[key];\n                            },\n                            set(v) {\n                                this[key] = v;\n                            },\n                        };\n                    })();\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    let result = get.call(this);\n                    if (result === undefined) {\n                        result = doQuery(this);\n                        if (result !== null || this.hasUpdated) {\n                            set.call(this, result);\n                        }\n                    }\n                    return result;\n                },\n            });\n        }\n        else {\n            // This object works as the return type for both standard and\n            // experimental decorators.\n            return desc(protoOrTarget, nameOrContext, {\n                get() {\n                    return doQuery(this);\n                },\n            });\n        }\n    });\n}\n//# sourceMappingURL=query.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { nothing } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = (value) => value ?? nothing;\n//# sourceMappingURL=if-defined.js.map","import { type MixinConstructor } from \"../types/mixins\";\r\n\r\nimport { LitElement } from \"lit\";\r\nimport { property } from \"lit/decorators.js\";\r\n\r\n/** @prop theme */\r\nexport declare class IThemeMixin {\r\n    theme?: Record<string, string>;\r\n}\r\n\r\nexport const ThemeMixin = <T extends MixinConstructor<LitElement>>(superClass: T) => {\r\n    class ThemeMx extends superClass {\r\n        @property({ type: Object }) theme?: Record<string, string>;\r\n\r\n        cssStyles = \"\";\r\n\r\n        connectedCallback(): void {\r\n            super.connectedCallback();\r\n\r\n            if (this.theme) {\r\n                this.#applyTheme();\r\n            }\r\n        }\r\n\r\n        #applyTheme() {\r\n            const key = this.tagName.toLowerCase();\r\n            for (const componentKey in this.theme) {\r\n                const value = this.theme[componentKey];\r\n                this.cssStyles += `--${this.#kamelCaseToKebabCase(key)}-${this.#kamelCaseToKebabCase(componentKey)}: ${value};`;\r\n            }\r\n\r\n            let style = this.shadowRoot?.querySelector(\"#mjo-theme\") as HTMLStyleElement;\r\n            if (!style) {\r\n                style = document.createElement(\"style\");\r\n                style.setAttribute(\"id\", \"mjo-theme\");\r\n                this.shadowRoot?.appendChild(style);\r\n            }\r\n\r\n            style.innerHTML = `:host {${this.cssStyles}}`;\r\n        }\r\n\r\n        #kamelCaseToKebabCase(str: string) {\r\n            return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\r\n        }\r\n    }\r\n\r\n    return ThemeMx as unknown as MixinConstructor<IThemeMixin> & T;\r\n};\r\n","export const pause = async (ms: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n","import { LitElement, PropertyValues, css, html } from \"lit\";\r\nimport { customElement, property, query, state } from \"lit/decorators.js\";\r\nimport { ifDefined } from \"lit/directives/if-defined.js\";\r\n\r\nimport { IThemeMixin, ThemeMixin } from \"./mixins/theme-mixin.js\";\r\nimport { pause } from \"./utils/utils.js\";\r\n\r\n@customElement(\"mjo-avatar\")\r\nexport class MjoAvatar extends ThemeMixin(LitElement) implements IThemeMixin {\r\n    @property({ type: Boolean }) bordered = false;\r\n    @property({ type: Boolean }) disabled = false;\r\n    @property({ type: Boolean }) clickable = false;\r\n    @property({ type: Boolean }) nameColoured = false;\r\n    @property({ type: String }) fallbackIcon?: string;\r\n    @property({ type: String }) alt?: string;\r\n    @property({ type: String }) color: \"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"info\" | \"error\" = \"default\";\r\n    @property({ type: String }) name?: string;\r\n    @property({ type: String }) radius: \"small\" | \"medium\" | \"large\" | \"full\" | \"none\" = \"full\";\r\n    @property({ type: String }) size: \"small\" | \"medium\" | \"large\" = \"medium\";\r\n    @property({ type: String }) src?: string;\r\n    @property({ type: String }) value?: string;\r\n\r\n    @state() private error = false;\r\n\r\n    @query(\".container\") private container!: HTMLElement;\r\n\r\n    private initial = \"\";\r\n\r\n    render() {\r\n        this.initial = this.name ? this.name[0].toLocaleUpperCase() : \"\";\r\n\r\n        return html`<div\r\n            class=\"container size-${this.size} radius-${this.radius} color-${this.color}\"\r\n            ?data-bordered=${this.bordered}\r\n            ?data-disabled=${this.disabled}\r\n            ?data-clickable=${this.clickable}\r\n            @click=${this.#handleCLick}\r\n        >\r\n            ${this.src && !this.error\r\n                ? html`<div class=\"image radius-${this.radius}\">\r\n                      <img src=${this.src} alt=${ifDefined(this.alt || this.name)} @error=${this.#handleError} />\r\n                  </div>`\r\n                : this.fallbackIcon\r\n                  ? html`<div class=\"image fallback radius-${this.radius} font-size-${this.size}\"><mjo-icon src=${this.fallbackIcon}></mjo-icon></div>`\r\n                  : this.name\r\n                    ? html`<div class=\"image name radius-${this.radius} font-size-${this.size}\"><span>${this.initial}</span></div>`\r\n                    : html`<div class=\"image radius-${this.radius}\"></div>`}\r\n        </div>`;\r\n    }\r\n\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        if (this.name) {\r\n            this.initial = this.name[0].toUpperCase();\r\n        }\r\n    }\r\n\r\n    protected updated(_changedProperties: PropertyValues): void {\r\n        if (_changedProperties.has(\"name\")) {\r\n            this.initial = this.name ? this.name[0].toUpperCase() : \"\";\r\n        }\r\n\r\n        if (_changedProperties.has(\"src\")) {\r\n            this.error = false;\r\n        }\r\n\r\n        // Query for nameElement each time to avoid stale references\r\n        const nameElement = this.shadowRoot?.querySelector(\".image.name\") as HTMLElement | null;\r\n\r\n        if (this.name && this.nameColoured && nameElement) {\r\n            const [bg, fg] = this.#colorByInitial();\r\n            nameElement.style.backgroundColor = bg;\r\n            nameElement.style.color = fg;\r\n        } else if (nameElement) {\r\n            nameElement.style.backgroundColor = \"\";\r\n            nameElement.style.color = \"\";\r\n        }\r\n    }\r\n\r\n    #colorByInitial() {\r\n        const backgroundColors = [\r\n            \"#e72c2c\",\r\n            \"#e7902c\",\r\n            \"#f1db13\",\r\n            \"#c1f113\",\r\n            \"#59f113\",\r\n            \"#26b632\",\r\n            \"#19da90\",\r\n            \"#10dfcd\",\r\n            \"#0ab4df\",\r\n            \"#0a78df\",\r\n            \"#0a43df\",\r\n            \"#6d0adf\",\r\n            \"#985cdd\",\r\n            \"#c85cdd\",\r\n            \"#dd5cc8\",\r\n            \"#c7199b\",\r\n            \"#c7194d\",\r\n        ];\r\n        const foregroundColors = [\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#000\",\r\n            \"#000\",\r\n            \"#000\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n            \"#fff\",\r\n        ];\r\n\r\n        const bgindex = this.initial.charCodeAt(0) % backgroundColors.length;\r\n        const fgindex = this.initial.charCodeAt(0) % foregroundColors.length;\r\n\r\n        return [backgroundColors[bgindex], foregroundColors[fgindex]];\r\n    }\r\n\r\n    async #handleCLick() {\r\n        if (!this.clickable || this.disabled) return;\r\n\r\n        this.dispatchEvent(new CustomEvent(\"avatar-click\", { detail: { value: this.value || this.name || \"\" } }));\r\n\r\n        this.container.style.transform = \"scale(0.9)\";\r\n        await pause(100);\r\n        this.container.style.transform = \"scale(1.1)\";\r\n        await pause(150);\r\n        this.container.removeAttribute(\"style\");\r\n    }\r\n\r\n    #handleError() {\r\n        this.error = true;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: inline-block;\r\n                vertical-align: middle;\r\n            }\r\n\r\n            .container {\r\n                position: relative;\r\n                box-sizing: border-box;\r\n                user-select: none;\r\n            }\r\n            .container[data-disabled] {\r\n                opacity: 0.5;\r\n                cursor: default !important;\r\n            }\r\n\r\n            .image {\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n                background: var(--mjo-avatar-background-color, var(--mjo-color-gray-400));\r\n                transition-property: background-color border-color border-radius;\r\n                transition-duration: 0.3s;\r\n            }\r\n            .image img {\r\n                width: 100%;\r\n                height: 100%;\r\n                object-fit: cover;\r\n                vertical-align: middle;\r\n            }\r\n\r\n            .fallback {\r\n                display: grid;\r\n                place-content: center;\r\n                color: var(--mjo-avatar-fallback-color, var(--mjo-color-gray-100));\r\n            }\r\n            .name {\r\n                display: grid;\r\n                place-content: center;\r\n                font-weight: bold;\r\n                background-color: var(--mjo-avatar-name-auto-background-color, var(--mjo-avatar-background-color, var(--mjo-color-gray-400)));\r\n                color: var(--mjo-avatar-name-auto-foreground-color, var(--mjo-avatar-name-color, var(--mjo-color-gray-100)));\r\n            }\r\n\r\n            .size-small {\r\n                font-size: var(--mjo-avatar-fallback-size-small, 18px);\r\n            }\r\n            .size-medium {\r\n                font-size: var(--mjo-avatar-fallback-size-medium, 28px);\r\n            }\r\n            .size-large {\r\n                font-size: var(--mjo-avatar-fallback-size-large, 40px);\r\n            }\r\n            .size-small mjo-icon {\r\n                font-size: var(--mjo-avatar-fallback-size-small, 18px);\r\n            }\r\n            .size-medium mjo-icon {\r\n                font-size: var(--mjo-avatar-fallback-size-medium, 28px);\r\n            }\r\n            .size-large mjo-icon {\r\n                font-size: var(--mjo-avatar-fallback-size-large, 40px);\r\n            }\r\n            .radius-small {\r\n                border-radius: var(--mjo-avatar-radius-small, 4px);\r\n            }\r\n            .radius-medium {\r\n                border-radius: var(--mjo-avatar-radius-medium, 8px);\r\n            }\r\n            .radius-large {\r\n                border-radius: var(--mjo-avatar-radius-large, 12px);\r\n            }\r\n            .radius-full {\r\n                border-radius: 50%;\r\n            }\r\n            .size-small {\r\n                width: var(--mjo-avatar-size-small, 32px);\r\n                height: var(--mjo-avatar-size-small, 32px);\r\n            }\r\n            .size-medium {\r\n                width: var(--mjo-avatar-size-medium, 44px);\r\n                height: var(--mjo-avatar-size-medium, 44px);\r\n            }\r\n            .size-large {\r\n                width: var(--mjo-avatar-size-large, 54px);\r\n                height: var(--mjo-avatar-size-large, 54px);\r\n            }\r\n            .color-default {\r\n                border-color: var(--mjo-avatar-name-auto-background-color, var(--mjo-avatar-border-color, var(--mjo-color-gray-300)));\r\n            }\r\n            .color-primary {\r\n                border-color: var(--mjo-primary-color, #1976d2);\r\n            }\r\n            .color-secondary {\r\n                border-color: var(--mjo-secondary-color, #cc3d74);\r\n            }\r\n            .color-success {\r\n                border-color: var(--mjo-success-color, #4caf50);\r\n            }\r\n            .color-warning {\r\n                border-color: var(--mjo-warning-color, #ff9800);\r\n            }\r\n            .color-info {\r\n                border-color: var(--mjo-info-color, #128ada);\r\n            }\r\n            .color-error {\r\n                border-color: var(--mjo-error-color, #f44336);\r\n            }\r\n\r\n            .container[data-bordered] {\r\n                border-style: solid;\r\n                border-width: var(--mjo-avatar-border-width, 2px);\r\n                padding: 2px;\r\n            }\r\n            .container[data-bordered].size-small {\r\n                width: calc(var(--mjo-avatar-size-small, 32px) - var(--mjo-avatar-border-width, 2px));\r\n                height: calc(var(--mjo-avatar-size-small, 32px) - var(--mjo-avatar-border-width, 2px));\r\n                font-size: calc(var(--mjo-avatar-fallback-size-small, 18px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-bordered].size-medium {\r\n                width: calc(var(--mjo-avatar-size-medium, 44px) - var(--mjo-avatar-border-width, 2px));\r\n                height: calc(var(--mjo-avatar-size-medium, 44px) - var(--mjo-avatar-border-width, 2px));\r\n                font-size: calc(var(--mjo-avatar-fallback-size-medium, 26px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-bordered].size-large {\r\n                width: calc(var(--mjo-avatar-size-large, 54px) - var(--mjo-avatar-border-width, 2px));\r\n                height: calc(var(--mjo-avatar-size-large, 54px) - var(--mjo-avatar-border-width, 2px));\r\n                font-size: calc(var(--mjo-avatar-fallback-size-large, 36px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-bordered].size-small mjo-icon {\r\n                font-size: calc(var(--mjo-avatar-fallback-size-small, 18px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-bordered].size-medium mjo-icon {\r\n                font-size: calc(var(--mjo-avatar-fallback-size-medium, 26px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-bordered].size-large mjo-icon {\r\n                font-size: calc(var(--mjo-avatar-fallback-size-large, 36px) - var(--mjo-avatar-border-width, 2px));\r\n            }\r\n            .container[data-clickable] {\r\n                cursor: pointer;\r\n                transition: transform 0.2s ease;\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"mjo-avatar\": MjoAvatar;\r\n    }\r\n\r\n    interface HTMLElementEventMap {\r\n        \"avatar-click\": CustomEvent<{ value: string }>;\r\n    }\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { nothing, noChange } from '../lit-html.js';\nimport { directive, Directive, PartType } from '../directive.js';\nconst HTML_RESULT = 1;\nexport class UnsafeHTMLDirective extends Directive {\n    constructor(partInfo) {\n        super(partInfo);\n        this._value = nothing;\n        if (partInfo.type !== PartType.CHILD) {\n            throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);\n        }\n    }\n    render(value) {\n        if (value === nothing || value == null) {\n            this._templateResult = undefined;\n            return (this._value = value);\n        }\n        if (value === noChange) {\n            return value;\n        }\n        if (typeof value != 'string') {\n            throw new Error(`${this.constructor.directiveName}() called with a non-string value`);\n        }\n        if (value === this._value) {\n            return this._templateResult;\n        }\n        this._value = value;\n        const strings = [value];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        strings.raw = strings;\n        // WARNING: impersonating a TemplateResult like this is extremely\n        // dangerous. Third-party directives should not do this.\n        return (this._templateResult = {\n            // Cast to a known set of integers that satisfy ResultType so that we\n            // don't have to export ResultType and possibly encourage this pattern.\n            // This property needs to remain unminified.\n            ['_$litType$']: this.constructor\n                .resultType,\n            strings,\n            values: [],\n        });\n    }\n}\nUnsafeHTMLDirective.directiveName = 'unsafeHTML';\nUnsafeHTMLDirective.resultType = HTML_RESULT;\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n//# sourceMappingURL=unsafe-html.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport { directive } from '../directive.js';\nimport { UnsafeHTMLDirective } from './unsafe-html.js';\nconst SVG_RESULT = 2;\nclass UnsafeSVGDirective extends UnsafeHTMLDirective {\n}\nUnsafeSVGDirective.directiveName = 'unsafeSVG';\nUnsafeSVGDirective.resultType = SVG_RESULT;\n/**\n * Renders the result as SVG, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive(UnsafeSVGDirective);\n//# sourceMappingURL=unsafe-svg.js.map","import { LitElement, css, html, nothing } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\nimport { unsafeSVG } from \"lit/directives/unsafe-svg.js\";\r\n\r\nimport { IThemeMixin, ThemeMixin } from \"./mixins/theme-mixin.js\";\r\n\r\n@customElement(\"mjo-icon\")\r\nexport class MjoIcon extends ThemeMixin(LitElement) implements IThemeMixin {\r\n    @property({ type: String }) src?: string;\r\n\r\n    render() {\r\n        return this.src ? html`${unsafeSVG(this.src)}` : nothing;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                position: relative;\r\n                display: inline-block;\r\n                font-size: 24px;\r\n                width: 1em;\r\n                height: 1em;\r\n            }\r\n            svg {\r\n                position: relative;\r\n                display: block;\r\n                width: 1em;\r\n                height: 1em;\r\n                fill: currentColor;\r\n                transition: var(--mjo-icon-transition, all 0.3s);\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"mjo-icon\": MjoIcon;\r\n    }\r\n}\r\n","import { LitElement, css, html } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\n\r\nimport { IThemeMixin, ThemeMixin } from \"./mixins/theme-mixin.js\";\r\n\r\n@customElement(\"mjo-typography\")\r\nexport class MjoTypography extends ThemeMixin(LitElement) implements IThemeMixin {\r\n    @property({ type: String }) tag: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"p\" | \"span\" | \"none\" = \"p\";\r\n    @property({ type: String }) size: \"heading1\" | \"heading2\" | \"heading3\" | \"base\" | \"body1\" | \"body2\" | \"body3\" = \"base\";\r\n    @property({ type: String }) weight: \"light\" | \"regular\" | \"medium\" | \"bold\" = \"regular\";\r\n\r\n    render() {\r\n        switch (this.tag) {\r\n            case \"h1\":\r\n                return html`<h1 class=${`${this.size} ${this.weight}`}><slot></slot></h1>`;\r\n            case \"h2\":\r\n                return html`<h2 class=${`${this.size} ${this.weight}`}><slot></slot></h2>`;\r\n            case \"h3\":\r\n                return html`<h3 class=${`${this.size} ${this.weight}`}><slot></slot></h3>`;\r\n            case \"h4\":\r\n                return html`<h4 class=${`${this.size} ${this.weight}`}><slot></slot></h4>`;\r\n            case \"h5\":\r\n                return html`<h5 class=${`${this.size} ${this.weight}`}><slot></slot></h5>`;\r\n            case \"span\":\r\n                return html`<span class=${`${this.size} ${this.weight}`}><slot></slot></span>`;\r\n            case \"p\":\r\n                return html`<p class=${`${this.size} ${this.weight}`}><slot></slot></p>`;\r\n            default:\r\n                return html`<slot></slot>`;\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                margin: 0.5em 0;\r\n            }\r\n            :host([tag=\"span\"]),\r\n            :host([tag=\"none\"]) {\r\n                margin: 0;\r\n                display: inline;\r\n            }\r\n            :host([tag=\"none\"]) {\r\n                line-height: calc(1em + 6px);\r\n            }\r\n            h1,\r\n            h2,\r\n            h3,\r\n            h4,\r\n            h5,\r\n            h6,\r\n            p,\r\n            span {\r\n                padding: 0;\r\n                margin: 0;\r\n            }\r\n            .heading1 {\r\n                font-size: var(--mjo-typography-h1-font-size, 2em);\r\n                line-height: var(--mjo-typography-h1-line-height, calc(1em + 6px));\r\n            }\r\n            .heading2 {\r\n                font-size: var(--mjo-typography-h2-font-size, 1.5em);\r\n                line-height: var(--mjo-typography-h2-line-height, calc(1em + 6px));\r\n            }\r\n            .heading3 {\r\n                font-size: var(--mjo-typography-h3-font-size, 1.25em);\r\n                line-height: var(--mjo-typography-h3-line-height, calc(1em + 6px));\r\n            }\r\n            .base {\r\n                font-size: var(--mjo-typography-base-font-size, 1em);\r\n                line-height: var(--mjo-typography-base-line-height, calc(1em + 6px));\r\n            }\r\n            .body1 {\r\n                font-size: var(--mjo-typography-body1-font-size, 0.875em);\r\n                line-height: var(--mjo-typography-body1-line-height, calc(1em + 6px));\r\n            }\r\n            .body2 {\r\n                font-size: var(--mjo-typography-body2-font-size, 0.75em);\r\n                line-height: var(--mjo-typography-body2-line-height, calc(1em + 6px));\r\n            }\r\n            .body3 {\r\n                font-size: var(--mjo-typography-body3-font-size, 0.625em);\r\n                line-height: var(--mjo-typography-body3-line-height, calc(1em + 6px));\r\n            }\r\n            .light {\r\n                font-weight: var(--mjo-typography-font-weight-light, 300);\r\n            }\r\n            .regular {\r\n                font-weight: var(--mjo-typography-font-weight-regular, 400);\r\n            }\r\n            .medium {\r\n                font-weight: var(--mjo-typography-font-weight-medium, 500);\r\n            }\r\n            .bold {\r\n                font-weight: var(--mjo-typography-font-weight-bold, 600);\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"mjo-typography\": MjoTypography;\r\n    }\r\n}\r\n","import { LitElement, css, html, nothing } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\n\r\nimport { AiFillCloseCircle } from \"mjo-icons/ai\";\r\nimport { IThemeMixin, ThemeMixin } from \"./mixins/theme-mixin.js\";\r\n\r\nimport \"./mjo-icon.js\";\r\nimport \"./mjo-typography.js\";\r\n\r\n@customElement(\"mjo-chip\")\r\nexport class MjoChip extends ThemeMixin(LitElement) implements IThemeMixin {\r\n    @property({ type: Boolean }) closable = false;\r\n    @property({ type: Boolean }) disabled = false;\r\n    @property({ type: String }) color: \"primary\" | \"secondary\" | \"default\" | \"success\" | \"warning\" | \"info\" | \"error\" = \"default\";\r\n    @property({ type: String }) endIcon?: string;\r\n    @property({ type: String }) label = \"\";\r\n    @property({ type: String }) radius: \"small\" | \"medium\" | \"large\" | \"full\" | \"none\" = \"full\";\r\n    @property({ type: String }) size: \"small\" | \"medium\" | \"large\" = \"medium\";\r\n    @property({ type: String }) startIcon?: string;\r\n    @property({ type: String }) value?: string;\r\n    @property({ type: String }) variant: \"solid\" | \"bordered\" | \"light\" | \"flat\" | \"faded\" | \"shadow\" | \"dot\" = \"solid\";\r\n\r\n    render() {\r\n        return html`<div\r\n            class=\"container\"\r\n            data-color=${this.color}\r\n            data-size=${this.size}\r\n            data-variant=${this.variant}\r\n            data-radius=${this.radius}\r\n            ?data-closable=${this.closable}\r\n            ?data-disabled=${this.disabled}\r\n        >\r\n            ${this.variant === \"dot\" ? html`<span class=\"dot\"></span>` : nothing}\r\n            ${this.startIcon ? html`<mjo-icon src=${this.startIcon}></mjo-icon>` : nothing}\r\n            <mjo-typography tag=\"span\" class=\"label\">${this.label}</mjo-typography>\r\n            ${this.endIcon ? html`<mjo-icon src=${this.endIcon}></mjo-icon>` : nothing}\r\n            ${this.closable\r\n                ? html`<mjo-icon class=\"close\" src=${AiFillCloseCircle} @click=${this.#hanldeClick} role=\"button\" tabindex=\"0\"></mjo-icon>`\r\n                : nothing}\r\n        </div>`;\r\n    }\r\n\r\n    #hanldeClick() {\r\n        this.dispatchEvent(new CustomEvent(\"close\", { bubbles: true, composed: true, detail: { value: this.value } }));\r\n        this.remove();\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: inline-flex;\r\n            }\r\n            .container {\r\n                position: relative;\r\n                background-color: var(--mjo-color-gray-400);\r\n                color: var(--mjo-color-white);\r\n                border-radius: 9999px;\r\n                font-size: var(--mjo-chip-font-size-medium-size, 0.9em);\r\n                line-height: var(--mjo-chip-line-height-medium-size, 1em);\r\n                height: 1.6em;\r\n                display: flex;\r\n                flex-flow: row nowrap;\r\n                align-items: center;\r\n                padding: var(--mjo-chip-padding, 0 0.75em);\r\n                gap: var(--mjo-chip-gap, 0.4em);\r\n            }\r\n            .dot {\r\n                width: 0.9em;\r\n                height: 0.9em;\r\n                border-radius: 9999px;\r\n                background-color: var(--mjo-color-gray-400);\r\n                flex-grow: 0;\r\n                flex-basis: auto;\r\n            }\r\n            mjo-icon {\r\n                font-size: 1em;\r\n                flex-grow: 0;\r\n                flex-basis: auto;\r\n            }\r\n            mjo-icon.close {\r\n                cursor: pointer;\r\n                transition: opacity 0.2s;\r\n            }\r\n            mjo-icon.close:hover {\r\n                opacity: 0.8;\r\n            }\r\n            .label {\r\n                flex-grow: 1;\r\n                flex-basis: 0;\r\n                white-space: nowrap;\r\n            }\r\n            .container[data-closable] {\r\n                padding-right: 0.25em;\r\n            }\r\n            .container[data-color=\"primary\"] {\r\n                background-color: var(--mjo-primary-color);\r\n                color: var(--mjo-primary-foreground-color);\r\n            }\r\n            .container[data-color=\"secondary\"] {\r\n                background-color: var(--mjo-secondary-color);\r\n                color: var(--mjo-secondary-foreground-color);\r\n            }\r\n            .container[data-color=\"success\"] {\r\n                background-color: var(--mjo-color-success);\r\n                color: var(--mjo-color-white);\r\n            }\r\n            .container[data-color=\"warning\"] {\r\n                background-color: var(--mjo-color-warning);\r\n                color: var(--mjo-color-white);\r\n            }\r\n            .container[data-color=\"info\"] {\r\n                background-color: var(--mjo-color-info);\r\n                color: var(--mjo-color-white);\r\n            }\r\n            .container[data-color=\"error\"] {\r\n                background-color: var(--mjo-color-error);\r\n                color: var(--mjo-color-white);\r\n            }\r\n            .container[data-color=\"default\"] mjo-icon.close {\r\n                color: var(--mjo-color-gray-800);\r\n            }\r\n            .container[data-color=\"primary\"] mjo-icon.close {\r\n                color: var(--mjo-primary-color-200, var(--mjo-secondary-foreground-color));\r\n            }\r\n            .container[data-color=\"secondary\"] mjo-icon.close {\r\n                color: var(--mjo-secondary-color-200, var(--mjo-secondary-foreground-color));\r\n            }\r\n            .container[data-color=\"success\"] mjo-icon.close {\r\n                color: #d8ffd2;\r\n            }\r\n            .container[data-color=\"warning\"] mjo-icon.close {\r\n                color: #fff2c6;\r\n            }\r\n            .container[data-color=\"info\"] mjo-icon.close {\r\n                color: #c8e7ff;\r\n            }\r\n            .container[data-color=\"error\"] mjo-icon.close {\r\n                color: #ffccd2;\r\n            }\r\n            .container[data-radius=\"none\"] {\r\n                border-radius: 0px;\r\n            }\r\n            .container[data-radius=\"small\"] {\r\n                border-radius: 5px;\r\n            }\r\n            .container[data-radius=\"medium\"] {\r\n                border-radius: 10px;\r\n            }\r\n            .container[data-radius=\"large\"] {\r\n                border-radius: 20px;\r\n            }\r\n            .container[data-size=\"small\"] {\r\n                font-size: var(--mjo-chip-font-size-small-size, 0.75em);\r\n                line-height: var(--mjo-chip-line-height-small-size, 0.75em);\r\n                height: 1.5em;\r\n            }\r\n            .container[data-size=\"large\"] {\r\n                font-size: var(--mjo-chip-font-size-large-size, 1.1em);\r\n                line-height: var(--mjo-chip-line-height-large-size, 1.2em);\r\n                height: 1.8em;\r\n            }\r\n            .container[data-variant=\"bordered\"] {\r\n                background-color: transparent;\r\n                border-style: solid;\r\n                border-width: var(--mjo-chip-border-width-size-medium, 2px);\r\n                border-color: var(--mjo-color-gray-400);\r\n                color: var(--mjo-color-gray-400);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-size=\"small\"] {\r\n                border-width: var(--mjo-chip-border-width-size-small, 1px);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-size=\"large\"] {\r\n                border-width: var(--mjo-chip-border-width-size-large, 3px);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"primary\"] {\r\n                border-color: var(--mjo-primary-color);\r\n                color: var(--mjo-primary-color);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"secondary\"] {\r\n                border-color: var(--mjo-secondary-color);\r\n                color: var(--mjo-secondary-color);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"success\"] {\r\n                border-color: var(--mjo-color-success);\r\n                color: var(--mjo-color-success);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"warning\"] {\r\n                border-color: var(--mjo-color-warning);\r\n                color: var(--mjo-color-warning);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"info\"] {\r\n                border-color: var(--mjo-color-info);\r\n                color: var(--mjo-color-info);\r\n            }\r\n            .container[data-variant=\"bordered\"][data-color=\"error\"] {\r\n                border-color: var(--mjo-color-error);\r\n                color: var(--mjo-color-error);\r\n            }\r\n            .container[data-variant=\"light\"] {\r\n                background-color: transparent;\r\n                color: var(--mjo-color-gray-400);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"primary\"] {\r\n                color: var(--mjo-primary-color);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"secondary\"] {\r\n                color: var(--mjo-secondary-color);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"success\"] {\r\n                color: var(--mjo-color-success);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"warning\"] {\r\n                color: var(--mjo-color-warning);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"info\"] {\r\n                color: var(--mjo-color-info);\r\n            }\r\n            .container[data-variant=\"light\"][data-color=\"error\"] {\r\n                color: var(--mjo-color-error);\r\n            }\r\n            .container[data-variant=\"flat\"] {\r\n                background-color: var(--mjo-color-gray-alpha2);\r\n                color: var(--mjo-color-gray-600);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"primary\"] {\r\n                background-color: var(--mjo-primary-color-alpha2);\r\n                color: var(--mjo-primary-color);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"secondary\"] {\r\n                background-color: var(--mjo-secondary-color-alpha2);\r\n                color: var(--mjo-secondary-color);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"success\"] {\r\n                background-color: var(--mjo-color-green-alpha2);\r\n                color: var(--mjo-color-success);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"warning\"] {\r\n                background-color: var(--mjo-color-orange-alpha2);\r\n                color: var(--mjo-color-warning);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"info\"] {\r\n                background-color: var(--mjo-color-blue-alpha2);\r\n                color: var(--mjo-color-info);\r\n            }\r\n            .container[data-variant=\"flat\"][data-color=\"error\"] {\r\n                background-color: var(--mjo-color-red-alpha2);\r\n                color: var(--mjo-color-error);\r\n            }\r\n            .container[data-variant=\"faded\"] {\r\n                background-color: var(--mjo-color-gray-600);\r\n                border-style: solid;\r\n                border-width: 2px;\r\n                border-color: var(--mjo-color-gray-200);\r\n                color: var(--mjo-color-white);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"primary\"] {\r\n                color: var(--mjo-primary-color);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"secondary\"] {\r\n                color: var(--mjo-secondary-color);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"success\"] {\r\n                color: var(--mjo-color-success);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"warning\"] {\r\n                color: var(--mjo-color-warning);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"info\"] {\r\n                color: var(--mjo-color-info);\r\n            }\r\n            .container[data-variant=\"faded\"][data-color=\"error\"] {\r\n                color: var(--mjo-color-error);\r\n            }\r\n            .container[data-variant=\"shadow\"] {\r\n                box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"primary\"] {\r\n                box-shadow: 0px 2px 5px var(--mjo-primary-color-alpha5);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"secondary\"] {\r\n                box-shadow: 0px 2px 5px var(--mjo-secondary-color-alpha5);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"success\"] {\r\n                box-shadow: 0px 2px 5px var(--mjo-color-green-alpha3);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"warning\"] {\r\n                color: var(--mjo-color-black);\r\n                box-shadow: 0px 2px 5px var(--mjo-color-orange-alpha5);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"info\"] {\r\n                box-shadow: 0px 2px 5px var(--mjo-color-blue-alpha5);\r\n            }\r\n            .container[data-variant=\"shadow\"][data-color=\"error\"] {\r\n                box-shadow: 0px 2px 5px var(--mjo-color-red-alpha5);\r\n            }\r\n            .container[data-variant=\"dot\"] {\r\n                border-style: solid;\r\n                border-width: 2px;\r\n                border-color: var(--mjo-color-gray-200);\r\n                background-color: transparent;\r\n                color: var(--mjo-foreground-color);\r\n            }\r\n            .container[data-variant=\"dot\"][data-size=\"small\"] .dot {\r\n                width: 0.75em;\r\n                height: 0.75em;\r\n            }\r\n            .container[data-variant=\"dot\"][data-size=\"large\"] .dot {\r\n                width: 1.1em;\r\n                height: 1.1em;\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"primary\"] .dot {\r\n                background-color: var(--mjo-primary-color);\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"secondary\"] .dot {\r\n                background-color: var(--mjo-secondary-color);\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"success\"] .dot {\r\n                background-color: var(--mjo-color-success);\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"warning\"] .dot {\r\n                background-color: var(--mjo-color-warning);\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"info\"] .dot {\r\n                background-color: var(--mjo-color-info);\r\n            }\r\n            .container[data-variant=\"dot\"][data-color=\"error\"] .dot {\r\n                background-color: var(--mjo-color-error);\r\n            }\r\n            .container[data-disabled] {\r\n                opacity: 0.5;\r\n                pointer-events: none;\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"mjo-chip\": MjoChip;\r\n    }\r\n}\r\n","import { MjoThemeConfig } from \"../types/mjo-theme\";\r\n\r\nexport const defaultTheme: MjoThemeConfig = {\r\n    radiusLarge: \"10px\",\r\n    radiusMedium: \"5px\",\r\n    radiusSmall: \"3px\",\r\n    fontSizeLarge: \"1.5em\",\r\n    fontSizeXlarge: \"1.75em\",\r\n    fontSizeXxlarge: \"2em\",\r\n    fontSizeMedium: \"1em\",\r\n    fontSizeSmall: \"0.8em\",\r\n    fontSizeXsmall: \"0.6em\",\r\n    fontSizeXxsmall: \"0.4em\",\r\n    fontWeightBold: \"700\",\r\n    fontWeightLight: \"300\",\r\n    fontWeightRegular: \"400\",\r\n    spaceXxsmall: \"3px\",\r\n    spaceXsmall: \"6px\",\r\n    spaceSmall: \"8px\",\r\n    spaceMedium: \"16px\",\r\n    spaceLarge: \"24px\",\r\n    spaceXlarge: \"32px\",\r\n    spaceXxlarge: \"40px\",\r\n    colors: {\r\n        white: \"#ffffff\",\r\n        black: \"#000000\",\r\n        warning: \"#ff9800\",\r\n        success: \"#4caf50\",\r\n        error: \"#f44336\",\r\n        info: \"#128ada\",\r\n        blue: {\r\n            default: \"#1d7fdb\",\r\n            alpha0: \"#e3f2fd00\",\r\n            alpha1: \"#e3f2fd11\",\r\n            alpha2: \"#e3f2fd22\",\r\n            alpha3: \"#e3f2fd33\",\r\n            alpha4: \"#e3f2fd44\",\r\n            alpha5: \"#e3f2fd55\",\r\n            alpha6: \"#e3f2fd66\",\r\n            alpha7: \"#e3f2fd77\",\r\n            alpha8: \"#e3f2fd88\",\r\n            alpha9: \"#e3f2fd99\",\r\n            \"50\": \"#e3f2fd\",\r\n            \"100\": \"#bbdefb\",\r\n            \"200\": \"#90caf9\",\r\n            \"300\": \"#64b5f6\",\r\n            \"400\": \"#42a5f5\",\r\n            \"500\": \"#1d7fdb\",\r\n            \"600\": \"#1e88e5\",\r\n            \"700\": \"#1976d2\",\r\n            \"800\": \"#1565c0\",\r\n            \"900\": \"#0d47a1\",\r\n        },\r\n        cyan: {\r\n            default: \"#00bcd4\",\r\n            alpha0: \"#00bcd400\",\r\n            alpha1: \"#00bcd411\",\r\n            alpha2: \"#00bcd422\",\r\n            alpha3: \"#00bcd433\",\r\n            alpha4: \"#00bcd444\",\r\n            alpha5: \"#00bcd455\",\r\n            alpha6: \"#00bcd466\",\r\n            alpha7: \"#00bcd477\",\r\n            alpha8: \"#00bcd488\",\r\n            alpha9: \"#00bcd499\",\r\n            \"50\": \"#e0f7fa\",\r\n            \"100\": \"#b2ebf2\",\r\n            \"200\": \"#80deea\",\r\n            \"300\": \"#4dd0e1\",\r\n            \"400\": \"#26c6da\",\r\n            \"500\": \"#00bcd4\",\r\n            \"600\": \"#00acc1\",\r\n            \"700\": \"#0097a7\",\r\n            \"800\": \"#00838f\",\r\n            \"900\": \"#006064\",\r\n        },\r\n        green: {\r\n            default: \"#4caf50\",\r\n            alpha0: \"#4caf5000\",\r\n            alpha1: \"#4caf5011\",\r\n            alpha2: \"#4caf5022\",\r\n            alpha3: \"#4caf5033\",\r\n            alpha4: \"#4caf5044\",\r\n            alpha5: \"#4caf5055\",\r\n            alpha6: \"#4caf5066\",\r\n            alpha7: \"#4caf5077\",\r\n            alpha8: \"#4caf5088\",\r\n            alpha9: \"#4caf5099\",\r\n            \"50\": \"#e8f5e9\",\r\n            \"100\": \"#c8e6c9\",\r\n            \"200\": \"#a5d6a7\",\r\n            \"300\": \"#81c784\",\r\n            \"400\": \"#66bb6a\",\r\n            \"500\": \"#4caf50\",\r\n            \"600\": \"#43a047\",\r\n            \"700\": \"#388e3c\",\r\n            \"800\": \"#2e7d32\",\r\n            \"900\": \"#1b5e20\",\r\n        },\r\n        purple: {\r\n            default: \"#9c27b0\",\r\n            alpha0: \"#9c27b000\",\r\n            alpha1: \"#9c27b011\",\r\n            alpha2: \"#9c27b022\",\r\n            alpha3: \"#9c27b033\",\r\n            alpha4: \"#9c27b044\",\r\n            alpha5: \"#9c27b055\",\r\n            alpha6: \"#9c27b066\",\r\n            alpha7: \"#9c27b077\",\r\n            alpha8: \"#9c27b088\",\r\n            alpha9: \"#9c27b099\",\r\n            \"50\": \"#f3e5f5\",\r\n            \"100\": \"#e1bee7\",\r\n            \"200\": \"#ce93d8\",\r\n            \"300\": \"#ba68c8\",\r\n            \"400\": \"#ab47bc\",\r\n            \"500\": \"#9c27b0\",\r\n            \"600\": \"#8e24aa\",\r\n            \"700\": \"#7b1fa2\",\r\n            \"800\": \"#6a1b9a\",\r\n            \"900\": \"#4a148c\",\r\n        },\r\n        red: {\r\n            default: \"#f44336\",\r\n            alpha0: \"#f4433600\",\r\n            alpha1: \"#f4433611\",\r\n            alpha2: \"#f4433622\",\r\n            alpha3: \"#f4433633\",\r\n            alpha4: \"#f4433644\",\r\n            alpha5: \"#f4433655\",\r\n            alpha6: \"#f4433666\",\r\n            alpha7: \"#f4433677\",\r\n            alpha8: \"#f4433688\",\r\n            alpha9: \"#f4433699\",\r\n            \"50\": \"#ffebee\",\r\n            \"100\": \"#ffcdd2\",\r\n            \"200\": \"#ef9a9a\",\r\n            \"300\": \"#e57373\",\r\n            \"400\": \"#ef5350\",\r\n            \"500\": \"#f44336\",\r\n            \"600\": \"#e53935\",\r\n            \"700\": \"#d32f2f\",\r\n            \"800\": \"#c62828\",\r\n            \"900\": \"#b71c1c\",\r\n        },\r\n        yellow: {\r\n            default: \"#ffeb3b\",\r\n            alpha0: \"#ffeb3b00\",\r\n            alpha1: \"#ffeb3b11\",\r\n            alpha2: \"#ffeb3b22\",\r\n            alpha3: \"#ffeb3b33\",\r\n            alpha4: \"#ffeb3b44\",\r\n            alpha5: \"#ffeb3b55\",\r\n            alpha6: \"#ffeb3b66\",\r\n            alpha7: \"#ffeb3b77\",\r\n            alpha8: \"#ffeb3b88\",\r\n            alpha9: \"#ffeb3b99\",\r\n            \"50\": \"#fffde7\",\r\n            \"100\": \"#fff9c4\",\r\n            \"200\": \"#fff59d\",\r\n            \"300\": \"#fff176\",\r\n            \"400\": \"#ffee58\",\r\n            \"500\": \"#ffeb3b\",\r\n            \"600\": \"#fdd835\",\r\n            \"700\": \"#fbc02d\",\r\n            \"800\": \"#f9a825\",\r\n            \"900\": \"#f57f17\",\r\n        },\r\n        pink: {\r\n            default: \"#e91e63\",\r\n            alpha0: \"#e91e6300\",\r\n            alpha1: \"#e91e6311\",\r\n            alpha2: \"#e91e6322\",\r\n            alpha3: \"#e91e6333\",\r\n            alpha4: \"#e91e6344\",\r\n            alpha5: \"#e91e6355\",\r\n            alpha6: \"#e91e6366\",\r\n            alpha7: \"#e91e6377\",\r\n            alpha8: \"#e91e6388\",\r\n            alpha9: \"#e91e6399\",\r\n            \"50\": \"#fce4ec\",\r\n            \"100\": \"#f8bbd0\",\r\n            \"200\": \"#f48fb1\",\r\n            \"300\": \"#f06292\",\r\n            \"400\": \"#ec407a\",\r\n            \"500\": \"#e91e63\",\r\n            \"600\": \"#d81b60\",\r\n            \"700\": \"#c2185b\",\r\n            \"800\": \"#ad1457\",\r\n            \"900\": \"#880e4f\",\r\n        },\r\n        gray: {\r\n            default: \"#71717A\",\r\n            alpha0: \"#71717A00\",\r\n            alpha1: \"#71717A11\",\r\n            alpha2: \"#71717A22\",\r\n            alpha3: \"#71717A33\",\r\n            alpha4: \"#71717A44\",\r\n            alpha5: \"#71717A55\",\r\n            alpha6: \"#71717A66\",\r\n            alpha7: \"#71717A77\",\r\n            alpha8: \"#71717A88\",\r\n            alpha9: \"#71717A99\",\r\n            \"50\": \"#FAFAFA\",\r\n            \"100\": \"#F4F4F5\",\r\n            \"200\": \"#E4E4E7\",\r\n            \"300\": \"#D4D4D8\",\r\n            \"400\": \"#A1A1AA\",\r\n            \"500\": \"#71717A\",\r\n            \"600\": \"#52525B\",\r\n            \"700\": \"#3F3F46\",\r\n            \"800\": \"#27272A\",\r\n            \"900\": \"#18181B\",\r\n        },\r\n    },\r\n    dark: {\r\n        boxShadow: {\r\n            default: \"0 0 5px rgba(0, 0, 0, 0.3)\",\r\n            \"1\": \"0 0 2px rgba(0, 0, 0, 0.4)\",\r\n            \"2\": \"0 0 7px rgba(0, 0, 0, 0.3)\",\r\n            \"3\": \"0 0 10px rgba(0, 0, 0, 0.3)\",\r\n            \"4\": \"3px 3px 5px rgba(0, 0, 0, 0.3)\",\r\n            \"5\": \"3px 3px 10px rgba(0, 0, 0, 0.3)\",\r\n        },\r\n        primaryColor: {\r\n            default: \"#1d7fdb\",\r\n            hover: \"#1a72c5\",\r\n            alpha0: \"#1d7fdb00\",\r\n            alpha1: \"#1d7fdb11\",\r\n            alpha2: \"#1d7fdb22\",\r\n            alpha3: \"#1d7fdb33\",\r\n            alpha4: \"#1d7fdb44\",\r\n            alpha5: \"#1d7fdb55\",\r\n            alpha6: \"#1d7fdb66\",\r\n            alpha7: \"#1d7fdb77\",\r\n            alpha8: \"#1d7fdb88\",\r\n            alpha9: \"#1d7fdb99\",\r\n            \"50\": \"#e8f2fb\",\r\n            \"100\": \"#d2e5f8\",\r\n            \"200\": \"#a5ccf1\",\r\n            \"300\": \"#77b2e9\",\r\n            \"400\": \"#4a99e2\",\r\n            \"500\": \"#1d7fdb\",\r\n            \"600\": \"#1a72c5\",\r\n            \"700\": \"#145999\",\r\n            \"800\": \"#0f406e\",\r\n            \"900\": \"#092642\",\r\n        },\r\n        primaryForegroundColor: {\r\n            default: \"#ffffff\",\r\n            light: \"#f2f2f2\",\r\n            dark: \"#cccccc\",\r\n        },\r\n        secondaryColor: {\r\n            default: \"#cc3d74\",\r\n            hover: \"#b83768\",\r\n            alpha0: \"#cc3d7400\",\r\n            alpha1: \"#cc3d7411\",\r\n            alpha2: \"#cc3d7422\",\r\n            alpha3: \"#cc3d7433\",\r\n            alpha4: \"#cc3d7444\",\r\n            alpha5: \"#cc3d7455\",\r\n            alpha6: \"#cc3d7466\",\r\n            alpha7: \"#cc3d7477\",\r\n            alpha8: \"#cc3d7488\",\r\n            alpha9: \"#cc3d7499\",\r\n            \"50\": \"#faecf1\",\r\n            \"100\": \"#f5d8e3\",\r\n            \"200\": \"#ebb1c7\",\r\n            \"300\": \"#e08bac\",\r\n            \"400\": \"#d66490\",\r\n            \"500\": \"#cc3d74\",\r\n            \"600\": \"#b83768\",\r\n            \"700\": \"#8f2b51\",\r\n            \"800\": \"#661f3a\",\r\n            \"900\": \"#3d1223\",\r\n        },\r\n        secondaryForegroundColor: {\r\n            default: \"#ffffff\",\r\n            light: \"#f2f2f2\",\r\n            dark: \"#cccccc\",\r\n        },\r\n        borderColor: {\r\n            default: \"#555555\",\r\n            low: \"#444444\",\r\n            xlow: \"#222222\",\r\n            high: \"#666666\",\r\n            xhigh: \"#888888\",\r\n        },\r\n        backgroundColor: {\r\n            hover: \"#666666\",\r\n            default: \"#151515\",\r\n            xlow: \"#030303\",\r\n            low: \"#111111\",\r\n            high: \"#252525\",\r\n            xhigh: \"#444444\",\r\n        },\r\n        backgroundColorCard: {\r\n            default: \"#333333\",\r\n            xlow: \"#111111\",\r\n            low: \"#222222\",\r\n            high: \"#555555\",\r\n            xhigh: \"#666666\",\r\n        },\r\n        foregroundColor: {\r\n            default: \"#f0f0f0\",\r\n            xlow: \"#999999\",\r\n            low: \"#bbbbbb\",\r\n            high: \"#ffffff\",\r\n            xhigh: \"#ffffff\",\r\n        },\r\n    },\r\n    light: {\r\n        boxShadow: {\r\n            default: \"0 0 5px rgba(0, 0, 0, 0.3)\",\r\n            \"1\": \"0 0 2px rgba(0, 0, 0, 0.4)\",\r\n            \"2\": \"0 0 7px rgba(0, 0, 0, 0.3)\",\r\n            \"3\": \"0 0 10px rgba(0, 0, 0, 0.3)\",\r\n            \"4\": \"3px 3px 5px rgba(0, 0, 0, 0.3)\",\r\n            \"5\": \"3px 3px 10px rgba(0, 0, 0, 0.3)\",\r\n        },\r\n        primaryColor: {\r\n            default: \"#1d7fdb\",\r\n            hover: \"#1a72c5\",\r\n            \"50\": \"#e8f2fb\",\r\n            \"100\": \"#d2e5f8\",\r\n            \"200\": \"#a5ccf1\",\r\n            \"300\": \"#77b2e9\",\r\n            \"400\": \"#4a99e2\",\r\n            \"500\": \"#1d7fdb\",\r\n            \"600\": \"#1a72c5\",\r\n            \"700\": \"#145999\",\r\n            \"800\": \"#0f406e\",\r\n            \"900\": \"#092642\",\r\n            alpha0: \"#1d7fdb00\",\r\n            alpha1: \"#1d7fdb11\",\r\n            alpha2: \"#1d7fdb22\",\r\n            alpha3: \"#1d7fdb33\",\r\n            alpha4: \"#1d7fdb44\",\r\n            alpha5: \"#1d7fdb55\",\r\n            alpha6: \"#1d7fdb66\",\r\n            alpha7: \"#1d7fdb77\",\r\n            alpha8: \"#1d7fdb88\",\r\n            alpha9: \"#1d7fdb99\",\r\n        },\r\n        primaryForegroundColor: {\r\n            default: \"#ffffff\",\r\n            light: \"#f2f2f2\",\r\n            dark: \"#cccccc\",\r\n        },\r\n        secondaryColor: {\r\n            default: \"#cc3d74\",\r\n            hover: \"#b83768\",\r\n            alpha0: \"#cc3d7400\",\r\n            alpha1: \"#cc3d7411\",\r\n            alpha2: \"#cc3d7422\",\r\n            alpha3: \"#cc3d7433\",\r\n            alpha4: \"#cc3d7444\",\r\n            alpha5: \"#cc3d7455\",\r\n            alpha6: \"#cc3d7466\",\r\n            alpha7: \"#cc3d7477\",\r\n            alpha8: \"#cc3d7488\",\r\n            alpha9: \"#cc3d7499\",\r\n            \"50\": \"#faecf1\",\r\n            \"100\": \"#f5d8e3\",\r\n            \"200\": \"#ebb1c7\",\r\n            \"300\": \"#e08bac\",\r\n            \"400\": \"#d66490\",\r\n            \"500\": \"#cc3d74\",\r\n            \"600\": \"#b83768\",\r\n            \"700\": \"#8f2b51\",\r\n            \"800\": \"#661f3a\",\r\n            \"900\": \"#3d1223\",\r\n        },\r\n        secondaryForegroundColor: {\r\n            default: \"#ffffff\",\r\n            light: \"#f2f2f2\",\r\n            dark: \"#cccccc\",\r\n        },\r\n        borderColor: {\r\n            default: \"#dddddd\",\r\n            xlow: \"#aaaaaa\",\r\n            low: \"#cccccc\",\r\n            high: \"#eeeeee\",\r\n            xhigh: \"#f0f0f0\",\r\n        },\r\n        backgroundColor: {\r\n            hover: \"#eeeeee\",\r\n            default: \"#efefef\",\r\n            xlow: \"#cccccc\",\r\n            low: \"#dddddd\",\r\n            high: \"#f6f6f6\",\r\n            xhigh: \"#ffffff\",\r\n        },\r\n        backgroundColorCard: {\r\n            default: \"#fafafa\",\r\n            xlow: \"#ffffff\",\r\n            low: \"#ffffff\",\r\n            high: \"#e6e6e6\",\r\n            xhigh: \"#dddddd\",\r\n        },\r\n        foregroundColor: {\r\n            default: \"#333333\",\r\n            xlow: \"#999999\",\r\n            low: \"#666666\",\r\n            high: \"#151515\",\r\n            xhigh: \"#000000\",\r\n        },\r\n    },\r\n};\r\n","import { MjoInputTheme, MjoThemeConfig, MjoThemeShadeStructure } from \"./types/mjo-theme\";\r\n\r\nimport { LitElement, css, html } from \"lit\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\n\r\nimport { defaultTheme } from \"./theme/default-theme.js\";\r\n\r\n@customElement(\"mjo-theme\")\r\nexport class MjoTheme extends LitElement {\r\n    @property({ type: String }) theme: \"dark\" | \"light\" = \"light\";\r\n    @property({ type: String }) scope: \"global\" | \"local\" = \"local\";\r\n    @property({ type: Object }) config: MjoThemeConfig = {};\r\n\r\n    cssStyles = \"\";\r\n\r\n    render() {\r\n        return html`<slot></slot>`;\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n\r\n        this.applyTheme();\r\n    }\r\n\r\n    protected updated(_changedProperties: Map<PropertyKey, unknown>): void {\r\n        if (_changedProperties.has(\"theme\") && _changedProperties.get(\"theme\") && _changedProperties.get(\"theme\") !== this.theme) {\r\n            this.applyTheme();\r\n        }\r\n    }\r\n\r\n    applyTheme() {\r\n        this.cssStyles = this.scope === \"global\" ? \":root {\" : \":host {\";\r\n\r\n        const mergedConfig = structuredClone(defaultTheme);\r\n        this.#mergeConfig(mergedConfig, this.config);\r\n        this.#applyThemeToCssVars(mergedConfig);\r\n\r\n        this.cssStyles += \"}\";\r\n\r\n        let style: HTMLStyleElement;\r\n        if (this.scope === \"global\") {\r\n            style = document.querySelector(\"#mjo-theme\") as HTMLStyleElement;\r\n            if (!style) {\r\n                style = document.createElement(\"style\");\r\n                style.setAttribute(\"id\", \"mjo-theme\");\r\n                document.head.appendChild(style);\r\n            }\r\n        } else {\r\n            style = this.shadowRoot?.querySelector(\"#mjo-theme\") as HTMLStyleElement;\r\n            if (!style) {\r\n                style = document.createElement(\"style\");\r\n                style.setAttribute(\"id\", \"mjo-theme\");\r\n                this.shadowRoot?.appendChild(style);\r\n            }\r\n        }\r\n\r\n        style.innerHTML = this.cssStyles;\r\n    }\r\n\r\n    #applyColorsPaletteToCssVars(colors: MjoThemeConfig[\"colors\"]) {\r\n        for (const key in colors) {\r\n            const value = colors[key as keyof MjoThemeConfig[\"colors\"]] as string | MjoThemeConfig[\"colors\"];\r\n\r\n            if (typeof value === \"object\") {\r\n                this.#applyStylesFromObject(value as MjoThemeShadeStructure, `--mjo-color-${this.#kamelCaseToKebabCase(key)}`);\r\n            } else {\r\n                this.cssStyles += `--mjo-color-${key}: ${value};`;\r\n            }\r\n        }\r\n    }\r\n\r\n    #applyThemeToCssVars(config: MjoThemeConfig | MjoThemeConfig[\"colors\"] | MjoThemeConfig[\"dark\"], prefix = \"--mjo-\") {\r\n        const theme = config;\r\n\r\n        for (const key in theme) {\r\n            const value = (theme as MjoThemeConfig)[key as keyof MjoThemeConfig];\r\n            if ((key === \"dark\" || key === \"light\") && this.theme !== key) {\r\n                continue;\r\n            }\r\n\r\n            if (key === \"colors\") {\r\n                this.#applyColorsPaletteToCssVars(value as MjoThemeConfig[\"colors\"]);\r\n                continue;\r\n            }\r\n\r\n            if (typeof value === \"object\" && (value as MjoThemeShadeStructure)[\"default\"]) {\r\n                this.#applyStylesFromObject(value as MjoThemeShadeStructure, `${prefix}${this.#kamelCaseToKebabCase(key)}`);\r\n                continue;\r\n            }\r\n\r\n            if (key === \"components\") {\r\n                this.#applyComponentsStyles(value as MjoThemeConfig[\"components\"]);\r\n                continue;\r\n            }\r\n\r\n            if (typeof value === \"object\") {\r\n                this.#applyThemeToCssVars(value as MjoThemeConfig);\r\n                continue;\r\n            }\r\n\r\n            const cssVar = `${prefix}${this.#kamelCaseToKebabCase(key)}`;\r\n\r\n            this.cssStyles += `${cssVar}: ${value};`;\r\n        }\r\n    }\r\n\r\n    #applyComponentsStyles(components: MjoThemeConfig[\"components\"]) {\r\n        for (const key in components) {\r\n            const component = components[key as keyof MjoThemeConfig[\"components\"]] as MjoInputTheme;\r\n            for (const componentKey in component) {\r\n                const value = component[componentKey as keyof typeof component];\r\n                this.cssStyles += `--${this.#kamelCaseToKebabCase(key)}-${this.#kamelCaseToKebabCase(componentKey)}: ${value};`;\r\n            }\r\n        }\r\n    }\r\n\r\n    #applyStylesFromObject(color: MjoThemeShadeStructure, prefix: string) {\r\n        for (const key in color) {\r\n            let cssVar = `${prefix}-${this.#kamelCaseToKebabCase(key)}`;\r\n            if (key === \"default\") cssVar = `${prefix}`;\r\n\r\n            this.cssStyles += `${cssVar}: ${color[key as keyof typeof color]};`;\r\n        }\r\n    }\r\n\r\n    #kamelCaseToKebabCase(str: string) {\r\n        return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, \"$1-$2\").toLowerCase();\r\n    }\r\n\r\n    #mergeConfig(defaultConfig: MjoThemeConfig, userConfig: MjoThemeConfig) {\r\n        for (const key in userConfig) {\r\n            if (typeof userConfig[key as keyof MjoThemeConfig] === \"object\" && defaultConfig[key as keyof MjoThemeConfig]) {\r\n                this.#mergeConfig(defaultConfig[key as keyof MjoThemeConfig] as MjoThemeConfig, userConfig[key as keyof MjoThemeConfig] as MjoThemeConfig);\r\n            } else {\r\n                defaultConfig[key as keyof MjoThemeConfig[\"colors\"]] = userConfig[key as keyof MjoThemeConfig[\"colors\"]];\r\n            }\r\n        }\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n            }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        \"mjo-theme\": MjoTheme;\r\n    }\r\n}\r\n","/**\r\n * Client entry point for SSR hydration\r\n * Imports all components needed for hydration\r\n */\r\n\r\nimport \"../../src/mjo-avatar.js\";\r\nimport \"../../src/mjo-chip.js\";\r\nimport \"../../src/mjo-theme.js\";\r\n\r\n// Function to initialize theme after hydration\r\nfunction initializeTheme(): void {\r\n    const savedTheme = localStorage.getItem(\"mjo-theme\") || \"light\";\r\n    const themeComponent = document.querySelector(\"mjo-theme\");\r\n\r\n    if (themeComponent) {\r\n        (themeComponent as any).theme = savedTheme;\r\n    }\r\n\r\n    const toggleBtn = document.querySelector(\".theme-toggle\");\r\n    if (toggleBtn) {\r\n        toggleBtn.textContent = savedTheme === \"dark\" ? \"☀️\" : \"🌙\";\r\n    }\r\n}\r\n\r\n// Global function to toggle theme (called from HTML)\r\n(window as any).toggleTheme = function (): void {\r\n    const themeComponent = document.querySelector(\"mjo-theme\");\r\n    if (themeComponent) {\r\n        const currentTheme = (themeComponent as any).theme;\r\n        const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\r\n        (themeComponent as any).theme = newTheme;\r\n        localStorage.setItem(\"mjo-theme\", newTheme);\r\n\r\n        const toggleBtn = document.querySelector(\".theme-toggle\");\r\n        if (toggleBtn) {\r\n            toggleBtn.textContent = newTheme === \"dark\" ? \"☀️\" : \"🌙\";\r\n        }\r\n    } else {\r\n        console.warn(\"⚠️ mjo-theme component not found\");\r\n    }\r\n};\r\n\r\n// Initialize theme when DOM is ready\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    initializeTheme();\r\n});\r\n\r\n// Also initialize after a short delay to ensure hydration\r\nsetTimeout(() => {\r\n    initializeTheme();\r\n}, 100);\r\n"],"names":["global","issueWarning","polyfillSupport","JSCompiler_renameProperty","defaultPropertyDeclaration","_a","_kamelCaseToKebabCase","kamelCaseToKebabCase_fn","_b","__decorateClass","__privateAdd","__privateMethod"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,12,13]}