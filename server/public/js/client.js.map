{"version":3,"file":"client.js","sources":["../../client/client.ts"],"sourcesContent":["/**\r\n * Entry point del cliente para hidratación SSR\r\n * Importa todos los componentes necesarios para la hidratación\r\n */\r\n\r\nconsole.log(\"🎨 mjo-litui client components loaded for hydration\");\r\n\r\n// Función para inicializar tema después de hidratación\r\nfunction initializeTheme(): void {\r\n    const savedTheme = localStorage.getItem(\"mjo-theme\") || \"light\";\r\n    const themeComponent = document.querySelector(\"mjo-theme\");\r\n\r\n    if (themeComponent) {\r\n        (themeComponent as any).theme = savedTheme;\r\n        console.log(\"🎨 Theme initialized from client:\", savedTheme);\r\n    }\r\n\r\n    const toggleBtn = document.querySelector(\".theme-toggle\");\r\n    if (toggleBtn) {\r\n        toggleBtn.textContent = savedTheme === \"dark\" ? \"☀️\" : \"🌙\";\r\n    }\r\n}\r\n\r\n// Función global para toggle de tema (llamada desde HTML)\r\n(window as any).toggleTheme = function (): void {\r\n    const themeComponent = document.querySelector(\"mjo-theme\");\r\n    if (themeComponent) {\r\n        const currentTheme = (themeComponent as any).theme;\r\n        const newTheme = currentTheme === \"light\" ? \"dark\" : \"light\";\r\n        (themeComponent as any).theme = newTheme;\r\n        localStorage.setItem(\"mjo-theme\", newTheme);\r\n\r\n        const toggleBtn = document.querySelector(\".theme-toggle\");\r\n        if (toggleBtn) {\r\n            toggleBtn.textContent = newTheme === \"dark\" ? \"☀️\" : \"🌙\";\r\n        }\r\n\r\n        console.log(\"🎨 Theme changed to:\", newTheme);\r\n    } else {\r\n        console.warn(\"⚠️ mjo-theme component not found\");\r\n    }\r\n};\r\n\r\n// Inicializar tema cuando el DOM esté listo\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    console.log(\"🚀 DOM ready, initializing theme...\");\r\n    initializeTheme();\r\n});\r\n\r\n// También inicializar después de un breve delay para asegurar hidratación\r\nsetTimeout(() => {\r\n    initializeTheme();\r\n}, 100);\r\n"],"names":[],"mappings":"AAKA,QAAQ,IAAI,qDAAqD;AAGjE,SAAS,kBAAwB;AAC7B,QAAM,aAAa,aAAa,QAAQ,WAAW,KAAK;AAClD,QAAA,iBAAiB,SAAS,cAAc,WAAW;AAEzD,MAAI,gBAAgB;AACf,mBAAuB,QAAQ;AACxB,YAAA,IAAI,qCAAqC,UAAU;AAAA,EAC/D;AAEM,QAAA,YAAY,SAAS,cAAc,eAAe;AACxD,MAAI,WAAW;AACD,cAAA,cAAc,eAAe,SAAS,OAAO;AAAA,EAC3D;AACJ;AAGC,OAAe,cAAc,WAAkB;AACtC,QAAA,iBAAiB,SAAS,cAAc,WAAW;AACzD,MAAI,gBAAgB;AAChB,UAAM,eAAgB,eAAuB;AACvC,UAAA,WAAW,iBAAiB,UAAU,SAAS;AACpD,mBAAuB,QAAQ;AACnB,iBAAA,QAAQ,aAAa,QAAQ;AAEpC,UAAA,YAAY,SAAS,cAAc,eAAe;AACxD,QAAI,WAAW;AACD,gBAAA,cAAc,aAAa,SAAS,OAAO;AAAA,IACzD;AAEQ,YAAA,IAAI,wBAAwB,QAAQ;AAAA,EAAA,OACzC;AACH,YAAQ,KAAK,kCAAkC;AAAA,EACnD;AACJ;AAGA,SAAS,iBAAiB,oBAAoB,MAAM;AAChD,UAAQ,IAAI,qCAAqC;AACjC;AACpB,CAAC;AAGD,WAAW,MAAM;AACG;AACpB,GAAG,GAAG;"}